basePath: /v1
definitions:
  api.GenerateEmailOTPRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  api.GenerateEmailOTPResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      expires_at:
        type: string
      otp_code:
        type: string
    required:
    - created_at
    - email
    - expires_at
    - otp_code
    type: object
  api.GeneratePhoneOTPRequest:
    properties:
      phone_number:
        description: Số điện thoại cần gửi OTP
        type: string
    required:
    - phone_number
    type: object
  api.GeneratePhoneOTPResponse:
    properties:
      created_at:
        description: Thời điểm OTP được tạo
        type: string
      expires_at:
        description: Thời điểm OTP hết hạn
        type: string
      otp_code:
        description: Mã OTP được tạo
        type: string
      phone_number:
        description: Số điện thoại đã gửi OTP
        type: string
    required:
    - created_at
    - expires_at
    - otp_code
    - phone_number
    type: object
  api.SubscriptionDetailsResponse:
    properties:
      auctions_remaining:
        description: AuctionsRemaining là số phiên đấu giá còn có thể mở (null nếu
          unlimited)
        example: 25
        type: integer
      can_upgrade:
        description: CanUpgrade cho biết có thể nâng cấp lên gói cao hơn không
        example: true
        type: boolean
      days_remaining:
        description: DaysRemaining là số ngày còn lại của subscription (null nếu vĩnh
          viễn)
        example: 45
        type: integer
      duration_days:
        description: DurationDays là thời hạn của gói (ngày), null nếu vĩnh viễn
        example: 90
        type: integer
      end_date:
        description: EndDate là thời gian kết thúc subscription (null nếu vĩnh viễn)
        example: "2024-03-01T10:00:00Z"
        type: string
      id:
        description: ID là ID duy nhất của subscription
        example: 1
        type: integer
      is_active:
        description: |-
          Plan details
          IsActive cho biết subscription có đang hoạt động không
        example: true
        type: boolean
      is_expiring_soon:
        description: |-
          Status indicators
          IsExpiringSoon cho biết subscription có sắp hết hạn không (< 7 ngày)
        example: false
        type: boolean
      is_unlimited:
        description: IsUnlimited cho biết có phải gói không giới hạn không
        example: false
        type: boolean
      listings_remaining:
        description: ListingsRemaining là số lượt đăng bán còn lại (null nếu unlimited)
        example: 38
        type: integer
      listings_used:
        description: ListingsUsed là số lượt đăng bán đã sử dụng
        example: 12
        type: integer
      max_listings:
        description: |-
          Listing information
          MaxListings là số lượt đăng bán tối đa (null nếu unlimited)
        example: 50
        type: integer
      max_open_auctions:
        description: |-
          Auction information
          MaxOpenAuctions là số phiên đấu giá tối đa có thể mở cùng lúc (null nếu unlimited)
        example: 30
        type: integer
      open_auctions_used:
        description: OpenAuctionsUsed là số phiên đấu giá đang mở
        example: 5
        type: integer
      plan_id:
        description: PlanID là ID của gói đăng ký
        example: 2
        type: integer
      seller_id:
        description: SellerID là ID của người bán
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      start_date:
        description: |-
          Time information
          StartDate là thời gian bắt đầu subscription
        example: "2023-12-01T10:00:00Z"
        type: string
      subscription_name:
        description: SubscriptionName là tên của gói đăng ký
        example: GÓI NÂNG CẤP
        type: string
      subscription_price:
        description: SubscriptionPrice là giá của gói đăng ký (VND)
        example: 359000
        type: integer
    required:
    - auctions_remaining
    - can_upgrade
    - days_remaining
    - duration_days
    - end_date
    - id
    - is_active
    - is_expiring_soon
    - is_unlimited
    - listings_remaining
    - listings_used
    - max_listings
    - max_open_auctions
    - open_auctions_used
    - plan_id
    - seller_id
    - start_date
    - subscription_name
    - subscription_price
    type: object
  api.VerifyEmailOTPRequest:
    properties:
      email:
        type: string
      otp_code:
        type: string
    required:
    - email
    - otp_code
    type: object
  api.VerifyPhoneOTPRequest:
    properties:
      otp_code:
        description: Mã OTP
        type: string
      phone_number:
        description: Số điện thoại mới
        type: string
      user_id:
        description: ID của user cần cập nhật số điện thoại
        type: string
    required:
    - otp_code
    - phone_number
    - user_id
    type: object
  api.addBankAccountRequest:
    properties:
      account_name:
        type: string
      account_number:
        type: string
      bank_code:
        type: string
      bank_name:
        type: string
      bank_short_name:
        type: string
    required:
    - account_name
    - account_number
    - bank_code
    - bank_name
    - bank_short_name
    type: object
  api.addCartItemRequest:
    properties:
      gundam_id:
        type: integer
    required:
    - gundam_id
    type: object
  api.cancelAuctionRequest:
    properties:
      reason:
        description: Lý do hủy đấu giá, có thể để trống
        type: string
    required:
    - reason
    type: object
  api.cancelExchangeRequest:
    properties:
      reason:
        type: string
    required:
    - reason
    type: object
  api.cancelOrderRequest:
    properties:
      reason:
        type: string
    required:
    - reason
    type: object
  api.checkEmailRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  api.completeWithdrawalRequestRequest:
    properties:
      transaction_reference:
        description: Mã giao dịch từ ngân hàng để hoàn tất yêu cầu rút tiền
        type: string
    required:
    - transaction_reference
    type: object
  api.createAuctionRequestBody:
    properties:
      bid_increment:
        type: integer
      buy_now_price:
        type: integer
      end_time:
        type: string
      gundam_id:
        type: integer
      start_time:
        type: string
      starting_price:
        type: integer
    required:
    - bid_increment
    - buy_now_price
    - end_time
    - gundam_id
    - start_time
    - starting_price
    type: object
  api.createExchangeOfferRequest:
    properties:
      compensation_amount:
        description: Số tiền bù theo VND (bắt buộc nếu có payer_id, phải > 0, chỉ
          trừ tiền khi offer được chấp nhận)
        example: 50000
        type: integer
      exchange_post_id:
        description: UUID của bài đăng trao đổi mà bạn muốn tạo offer
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      note:
        description: Tin nhắn gửi kèm cho chủ bài đăng (tùy chọn)
        example: Tôi rất thích RG Unicorn của bạn!
        type: string
      offerer_gundam_ids:
        description: Danh sách ID các Gundam của bạn để đưa ra trao đổi (phải thuộc
          về bạn và có status "in store")
        example:
        - 789
        - 321
        items:
          type: integer
        type: array
      payer_id:
        description: ID người phải trả tiền bù (chỉ có thể là bạn hoặc chủ bài đăng,
          để null nếu không có ai bù)
        example: user_abc123
        type: string
      poster_gundam_ids:
        description: Danh sách ID các Gundam của chủ bài đăng mà bạn muốn nhận về
          (phải thuộc bài đăng này và có status "for exchange")
        example:
        - 123
        - 456
        items:
          type: integer
        type: array
    required:
    - compensation_amount
    - exchange_post_id
    - note
    - offerer_gundam_ids
    - payer_id
    - poster_gundam_ids
    type: object
  api.createExchangePostRequest:
    properties:
      content:
        description: Nội dung bài post
        type: string
      post_images:
        description: Ảnh bài post
        items:
          $ref: '#/definitions/multipart.FileHeader'
        maxItems: 5
        minItems: 1
        type: array
      post_item_id:
        description: ID của các Gundam mà chủ bài post cho phép trao đổi
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - content
    - post_images
    - post_item_id
    type: object
  api.createOrderRequest:
    properties:
      buyer_address_id:
        description: |-
          ID of the buyer's chosen address
          example: 42
        type: integer
      delivery_fee:
        description: |-
          Delivery fee (VND)
          minimum: 0
          example: 30000
        minimum: 0
        type: integer
      expected_delivery_time:
        description: |-
          Expected delivery time
          example: 2025-04-05T10:00:00Z
        type: string
      gundam_ids:
        description: |-
          List of Gundam IDs in the order
          example: [1, 2, 3]
        items:
          type: integer
        type: array
      items_subtotal:
        description: |-
          Total value of all items (excluding delivery fee)
          minimum: 0
          example: 500000
        minimum: 0
        type: integer
      note:
        description: |-
          Optional note for the order
          maxLength: 255
          example: Please deliver in the morning
        maxLength: 255
        type: string
      payment_method:
        description: |-
          Payment method (wallet: pay via platform wallet, cod: cash on delivery)
          enums: wallet,cod
          example: wallet
        enum:
        - wallet
        - cod
        type: string
      seller_id:
        description: |-
          ID of the seller
          example: user123
        type: string
      total_amount:
        description: |-
          Total order amount (including delivery fee)
          minimum: 0
          example: 530000
        minimum: 0
        type: integer
    required:
    - buyer_address_id
    - delivery_fee
    - expected_delivery_time
    - gundam_ids
    - items_subtotal
    - note
    - payment_method
    - seller_id
    - total_amount
    type: object
  api.createSellerProfileRequest:
    properties:
      shop_name:
        type: string
      user_id:
        type: string
    required:
    - shop_name
    - user_id
    type: object
  api.createUserAddressRequest:
    properties:
      detail:
        type: string
      district_name:
        type: string
      full_name:
        type: string
      ghn_district_id:
        type: integer
      ghn_ward_code:
        type: string
      is_pickup_address:
        type: boolean
      is_primary:
        type: boolean
      phone_number:
        type: string
      province_name:
        type: string
      ward_name:
        type: string
    required:
    - detail
    - district_name
    - full_name
    - ghn_district_id
    - ghn_ward_code
    - is_pickup_address
    - is_primary
    - phone_number
    - province_name
    - ward_name
    type: object
  api.createUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    required:
    - email
    - full_name
    - password
    type: object
  api.createWithdrawalRequestBody:
    properties:
      amount:
        type: integer
      bank_account_id:
        type: string
    required:
    - amount
    - bank_account_id
    type: object
  api.createZalopayOrderRequest:
    properties:
      amount:
        minimum: 1000
        type: integer
      description:
        maxLength: 256
        type: string
      redirect_url:
        type: string
    required:
    - amount
    - description
    - redirect_url
    type: object
  api.loginUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  api.loginUserResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      user:
        $ref: '#/definitions/db.User'
    required:
    - access_token
    - access_token_expires_at
    - user
    type: object
  api.loginUserWithGoogleRequest:
    properties:
      id_token:
        type: string
    required:
    - id_token
    type: object
  api.payAuctionWinningBidRequest:
    properties:
      delivery_fee:
        type: integer
      expected_delivery_time:
        type: string
      note:
        type: string
      user_address_id:
        type: integer
    required:
    - delivery_fee
    - expected_delivery_time
    - note
    - user_address_id
    type: object
  api.payExchangeDeliveryFeeRequest:
    properties:
      delivery_fee:
        minimum: 1
        type: integer
      expected_delivery_time:
        type: string
      note:
        type: string
    required:
    - delivery_fee
    - expected_delivery_time
    - note
    type: object
  api.placeBidRequest:
    properties:
      amount:
        type: integer
    required:
    - amount
    type: object
  api.provideExchangeDeliveryAddressesRequest:
    properties:
      from_address_id:
        description: ID địa chỉ gửi đã được lưu trong bảng user_addresses
        type: integer
      to_address_id:
        description: ID địa chỉ nhận đã được lưu trong bảng user_addresses
        type: integer
    required:
    - from_address_id
    - to_address_id
    type: object
  api.rejectAuctionRequestBody:
    properties:
      reason:
        type: string
    required:
    - reason
    type: object
  api.rejectWithdrawalRequestRequest:
    properties:
      reason:
        description: Lý do từ chối yêu cầu rút tiền của moderator
        type: string
    required:
    - reason
    type: object
  api.requestNegotiationForOfferRequest:
    properties:
      note:
        description: Ghi chú từ người yêu cầu thương lượng, không bắt buộc
        type: string
    required:
    - note
    type: object
  api.updateAuctionDetailsByModeratorBody:
    properties:
      end_time:
        type: string
      start_time:
        type: string
    required:
    - end_time
    - start_time
    type: object
  api.updateAvatarResponse:
    properties:
      avatar_url:
        type: string
    required:
    - avatar_url
    type: object
  api.updateExchangeOfferRequest:
    properties:
      compensation_amount:
        description: Bắt buộc khi require_compensation=true
        type: integer
      note:
        description: Tin nhắn thương lượng, không bắt buộc
        type: string
      payer_id:
        description: ID người trả tiền bù, bắt buộc khi require_compensation=true
        type: string
      require_compensation:
        description: true = yêu cầu bù tiền, false = không yêu cầu bù tiền
        type: boolean
    required:
    - compensation_amount
    - note
    - payer_id
    - require_compensation
    type: object
  api.updateSellerProfileRequest:
    properties:
      shop_name:
        type: string
      user_id:
        type: string
    required:
    - shop_name
    - user_id
    type: object
  api.updateUserAddressRequest:
    properties:
      detail:
        type: string
      district_name:
        type: string
      full_name:
        type: string
      ghn_district_id:
        type: integer
      ghn_ward_code:
        type: string
      is_pickup_address:
        type: boolean
      is_primary:
        type: boolean
      phone_number:
        type: string
      province_name:
        type: string
      ward_name:
        type: string
    required:
    - detail
    - district_name
    - full_name
    - ghn_district_id
    - ghn_ward_code
    - is_pickup_address
    - is_primary
    - phone_number
    - province_name
    - ward_name
    type: object
  api.updateUserRequest:
    properties:
      full_name:
        type: string
    required:
    - full_name
    type: object
  api.upgradeSubscriptionRequest:
    properties:
      plan_id:
        description: ID of the target subscription plan
        example: 2
        type: integer
    required:
    - plan_id
    type: object
  api.verifyAccessTokenRequest:
    properties:
      access_token:
        type: string
    required:
    - access_token
    type: object
  db.AcceptExchangeOfferTxResult:
    properties:
      exchange:
        $ref: '#/definitions/db.Exchange'
    required:
    - exchange
    type: object
  db.AddCartItemRow:
    properties:
      cart_item_id:
        type: string
      gundam_id:
        type: integer
      gundam_image_url:
        type: string
      gundam_name:
        type: string
      gundam_price:
        type: integer
      seller_avatar_url:
        type: string
      seller_id:
        type: string
      seller_name:
        type: string
    required:
    - cart_item_id
    - gundam_id
    - gundam_image_url
    - gundam_name
    - gundam_price
    - seller_avatar_url
    - seller_id
    - seller_name
    type: object
  db.AdminDashboard:
    properties:
      completed_auctions_this_week:
        description: Tổng số phiên đấu giá đã hoàn thành trong tuần này
        type: integer
      completed_exchanges_this_month:
        description: Tổng số cuộc trao đổi đã hoàn thành trong tháng này
        type: integer
      new_users_this_week:
        description: Số lượng người dùng mới trong tuần này
        type: integer
      total_auction_orders_this_month:
        description: Tổng số đơn hàng đấu giá trong tháng này
        type: integer
      total_business_users:
        description: Tổng số người dùng hoạt động trên nền tảng (chỉ tính role member
          và seller)
        type: integer
      total_exchange_orders_this_month:
        description: Tổng số đơn hàng trao đổi trong tháng này
        type: integer
      total_published_gundams:
        description: Tổng số gundam đã được đăng bán
        type: integer
      total_regular_orders_this_month:
        description: Tổng số đơn hàng thường trong tháng này
        type: integer
      total_revenue_this_month:
        description: Tổng doanh thu trong tháng này
        type: integer
      total_wallet_volume_this_week:
        description: Tổng khối lượng giao dịch ví trong tuần này
        type: integer
    required:
    - completed_auctions_this_week
    - completed_exchanges_this_month
    - new_users_this_week
    - total_auction_orders_this_month
    - total_business_users
    - total_exchange_orders_this_month
    - total_published_gundams
    - total_regular_orders_this_month
    - total_revenue_this_month
    - total_wallet_volume_this_week
    type: object
  db.ApproveAuctionRequestTxResult:
    properties:
      created_auction:
        $ref: '#/definitions/db.Auction'
      updated_request:
        $ref: '#/definitions/db.AuctionRequest'
    required:
    - created_auction
    - updated_request
    type: object
  db.Auction:
    properties:
      actual_end_time:
        type: string
      bid_increment:
        type: integer
      buy_now_price:
        type: integer
      canceled_by:
        type: string
      canceled_reason:
        type: string
      created_at:
        type: string
      current_price:
        type: integer
      deposit_amount:
        type: integer
      deposit_rate:
        type: number
      end_time:
        type: string
      gundam_id:
        type: integer
      gundam_snapshot:
        $ref: '#/definitions/db.GundamSnapshot'
      id:
        type: string
      order_id:
        type: string
      request_id:
        type: string
      seller_id:
        type: string
      start_time:
        type: string
      starting_price:
        type: integer
      status:
        $ref: '#/definitions/db.AuctionStatus'
      total_bids:
        type: integer
      total_participants:
        type: integer
      updated_at:
        type: string
      winner_payment_deadline:
        type: string
      winning_bid_id:
        type: string
    required:
    - actual_end_time
    - bid_increment
    - buy_now_price
    - canceled_by
    - canceled_reason
    - created_at
    - current_price
    - deposit_amount
    - deposit_rate
    - end_time
    - gundam_id
    - gundam_snapshot
    - id
    - order_id
    - request_id
    - seller_id
    - start_time
    - starting_price
    - status
    - total_bids
    - total_participants
    - updated_at
    - winner_payment_deadline
    - winning_bid_id
    type: object
  db.AuctionBid:
    properties:
      amount:
        type: integer
      auction_id:
        type: string
      bidder_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      participant_id:
        type: string
    required:
    - amount
    - auction_id
    - bidder_id
    - created_at
    - id
    - participant_id
    type: object
  db.AuctionDetails:
    properties:
      auction:
        allOf:
        - $ref: '#/definitions/db.Auction'
        description: Thông tin phiên đấu giá
      auction_bids:
        description: Danh sách giá đấu
        items:
          $ref: '#/definitions/db.AuctionBid'
        type: array
      auction_participants:
        description: Danh sách người tham gia đấu giá
        items:
          $ref: '#/definitions/db.AuctionParticipant'
        type: array
    required:
    - auction
    - auction_bids
    - auction_participants
    type: object
  db.AuctionParticipant:
    properties:
      auction_id:
        type: string
      created_at:
        type: string
      deposit_amount:
        type: integer
      deposit_entry_id:
        type: integer
      id:
        type: string
      is_refunded:
        type: boolean
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - auction_id
    - created_at
    - deposit_amount
    - deposit_entry_id
    - id
    - is_refunded
    - updated_at
    - user_id
    type: object
  db.AuctionRequest:
    properties:
      approved_by:
        type: string
      bid_increment:
        type: integer
      buy_now_price:
        type: integer
      created_at:
        type: string
      deposit_amount:
        type: integer
      deposit_rate:
        type: number
      end_time:
        type: string
      gundam_id:
        type: integer
      gundam_snapshot:
        $ref: '#/definitions/db.GundamSnapshot'
      id:
        type: string
      rejected_by:
        type: string
      rejected_reason:
        type: string
      seller_id:
        type: string
      start_time:
        type: string
      starting_price:
        type: integer
      status:
        $ref: '#/definitions/db.AuctionRequestStatus'
      updated_at:
        type: string
    required:
    - approved_by
    - bid_increment
    - buy_now_price
    - created_at
    - deposit_amount
    - deposit_rate
    - end_time
    - gundam_id
    - gundam_snapshot
    - id
    - rejected_by
    - rejected_reason
    - seller_id
    - start_time
    - starting_price
    - status
    - updated_at
    type: object
  db.AuctionRequestStatus:
    enum:
    - pending
    - approved
    - rejected
    type: string
    x-enum-varnames:
    - AuctionRequestStatusPending
    - AuctionRequestStatusApproved
    - AuctionRequestStatusRejected
  db.AuctionStatus:
    enum:
    - scheduled
    - active
    - ended
    - completed
    - canceled
    - failed
    type: string
    x-enum-varnames:
    - AuctionStatusScheduled
    - AuctionStatusActive
    - AuctionStatusEnded
    - AuctionStatusCompleted
    - AuctionStatusCanceled
    - AuctionStatusFailed
  db.CancelExchangeTxResult:
    properties:
      exchange:
        $ref: '#/definitions/db.Exchange'
      refunded_compensation:
        type: boolean
      refunded_offerer_delivery_fee:
        type: boolean
      refunded_poster_delivery_fee:
        type: boolean
    required:
    - exchange
    - refunded_compensation
    - refunded_offerer_delivery_fee
    - refunded_poster_delivery_fee
    type: object
  db.CancelOrderByBuyerTxResult:
    properties:
      buyer_wallet:
        $ref: '#/definitions/db.Wallet'
      order:
        $ref: '#/definitions/db.Order'
      order_transaction:
        $ref: '#/definitions/db.OrderTransaction'
      refund_entry:
        $ref: '#/definitions/db.WalletEntry'
    required:
    - buyer_wallet
    - order
    - order_transaction
    - refund_entry
    type: object
  db.CancelOrderBySellerTxResult:
    properties:
      buyer_wallet:
        $ref: '#/definitions/db.Wallet'
      order:
        $ref: '#/definitions/db.Order'
      order_transaction:
        $ref: '#/definitions/db.OrderTransaction'
      refund_entry:
        $ref: '#/definitions/db.WalletEntry'
    required:
    - buyer_wallet
    - order
    - order_transaction
    - refund_entry
    type: object
  db.ConfirmOrderTxResult:
    properties:
      order:
        allOf:
        - $ref: '#/definitions/db.Order'
        description: Đơn hàng đã được cập nhật
      order_items:
        description: Các mặt hàng trong đơn hàng
        items:
          $ref: '#/definitions/db.OrderItem'
        type: array
      order_transaction:
        allOf:
        - $ref: '#/definitions/db.OrderTransaction'
        description: Giao dịch đơn hàng đã được cập nhật với seller_entry_id
      seller_entry:
        allOf:
        - $ref: '#/definitions/db.WalletEntry'
        description: Bút toán cộng tiền cho người bán (pending)
    required:
    - order
    - order_items
    - order_transaction
    - seller_entry
    type: object
  db.CreateExchangeOfferTxResult:
    properties:
      offer:
        $ref: '#/definitions/db.ExchangeOffer'
      offer_items:
        items:
          $ref: '#/definitions/db.ExchangeOfferItem'
        type: array
    required:
    - offer
    - offer_items
    type: object
  db.CreateExchangePostTxResult:
    properties:
      exchange_post:
        $ref: '#/definitions/db.ExchangePost'
      exchange_post_items:
        items:
          $ref: '#/definitions/db.ExchangePostItem'
        type: array
    required:
    - exchange_post
    - exchange_post_items
    type: object
  db.CreateOrderTxResult:
    properties:
      buyer_entry:
        $ref: '#/definitions/db.WalletEntry'
      order:
        $ref: '#/definitions/db.Order'
      order_delivery:
        $ref: '#/definitions/db.OrderDelivery'
      order_items:
        items:
          $ref: '#/definitions/db.OrderItem'
        type: array
      order_transaction:
        $ref: '#/definitions/db.OrderTransaction'
    required:
    - buyer_entry
    - order
    - order_delivery
    - order_items
    - order_transaction
    type: object
  db.DeleteExchangePostTxResult:
    properties:
      deleted_exchange_post:
        $ref: '#/definitions/db.ExchangePost'
      deleted_exchange_post_offers:
        items:
          $ref: '#/definitions/db.ExchangeOffer'
        type: array
    required:
    - deleted_exchange_post
    - deleted_exchange_post_offers
    type: object
  db.DeliveryInformation:
    properties:
      created_at:
        type: string
      detail:
        type: string
      district_name:
        type: string
      full_name:
        type: string
      ghn_district_id:
        type: integer
      ghn_ward_code:
        type: string
      id:
        type: integer
      phone_number:
        type: string
      province_name:
        type: string
      user_id:
        type: string
      ward_name:
        type: string
    required:
    - created_at
    - detail
    - district_name
    - full_name
    - ghn_district_id
    - ghn_ward_code
    - id
    - phone_number
    - province_name
    - user_id
    - ward_name
    type: object
  db.DeliveryOverralStatus:
    enum:
    - picking
    - delivering
    - delivered
    - failed
    - return
    type: string
    x-enum-varnames:
    - DeliveryOverralStatusPicking
    - DeliveryOverralStatusDelivering
    - DeliveryOverralStatusDelivered
    - DeliveryOverralStatusFailed
    - DeliveryOverralStatusReturn
  db.Exchange:
    properties:
      canceled_by:
        type: string
      canceled_reason:
        type: string
      compensation_amount:
        type: integer
      completed_at:
        type: string
      created_at:
        type: string
      id:
        type: string
      offerer_delivery_fee:
        type: integer
      offerer_delivery_fee_paid:
        type: boolean
      offerer_from_delivery_id:
        type: integer
      offerer_id:
        type: string
      offerer_order_expected_delivery_time:
        type: string
      offerer_order_id:
        type: string
      offerer_order_note:
        type: string
      offerer_to_delivery_id:
        type: integer
      payer_id:
        type: string
      poster_delivery_fee:
        type: integer
      poster_delivery_fee_paid:
        type: boolean
      poster_from_delivery_id:
        type: integer
      poster_id:
        type: string
      poster_order_expected_delivery_time:
        type: string
      poster_order_id:
        type: string
      poster_order_note:
        type: string
      poster_to_delivery_id:
        type: integer
      status:
        $ref: '#/definitions/db.ExchangeStatus'
      updated_at:
        type: string
    required:
    - canceled_by
    - canceled_reason
    - compensation_amount
    - completed_at
    - created_at
    - id
    - offerer_delivery_fee
    - offerer_delivery_fee_paid
    - offerer_from_delivery_id
    - offerer_id
    - offerer_order_expected_delivery_time
    - offerer_order_id
    - offerer_order_note
    - offerer_to_delivery_id
    - payer_id
    - poster_delivery_fee
    - poster_delivery_fee_paid
    - poster_from_delivery_id
    - poster_id
    - poster_order_expected_delivery_time
    - poster_order_id
    - poster_order_note
    - poster_to_delivery_id
    - status
    - updated_at
    type: object
  db.ExchangeItem:
    properties:
      created_at:
        type: string
      exchange_id:
        type: string
      grade:
        type: string
      gundam_id:
        type: integer
      id:
        type: string
      image_url:
        type: string
      is_from_poster:
        type: boolean
      name:
        type: string
      owner_id:
        type: string
      quantity:
        type: integer
      scale:
        type: string
      slug:
        type: string
      weight:
        type: integer
    required:
    - created_at
    - exchange_id
    - grade
    - gundam_id
    - id
    - image_url
    - is_from_poster
    - name
    - owner_id
    - quantity
    - scale
    - slug
    - weight
    type: object
  db.ExchangeOffer:
    properties:
      compensation_amount:
        type: integer
      created_at:
        type: string
      id:
        type: string
      last_negotiation_at:
        type: string
      max_negotiations:
        type: integer
      negotiation_requested:
        type: boolean
      negotiations_count:
        type: integer
      note:
        type: string
      offerer_id:
        type: string
      payer_id:
        type: string
      post_id:
        type: string
      updated_at:
        type: string
    required:
    - compensation_amount
    - created_at
    - id
    - last_negotiation_at
    - max_negotiations
    - negotiation_requested
    - negotiations_count
    - note
    - offerer_id
    - payer_id
    - post_id
    - updated_at
    type: object
  db.ExchangeOfferInfo:
    properties:
      compensation_amount:
        description: Số tiền bù
        type: integer
      created_at:
        description: Thời gian tạo đề xuất
        type: string
      id:
        description: ID đề xuất
        type: string
      last_negotiation_at:
        description: Thời gian thương lượng gần nhất
        type: string
      max_negotiations:
        description: Số lần thương lượng tối đa
        type: integer
      negotiation_notes:
        description: Các ghi chú/tin nhắn thương lượng
        items:
          $ref: '#/definitions/db.ExchangeOfferNote'
        type: array
      negotiation_requested:
        description: Đã yêu cầu thương lượng chưa
        type: boolean
      negotiations_count:
        description: Số lần đã thương lượng
        type: integer
      note:
        description: Ghi chú của đề xuất
        type: string
      offerer:
        allOf:
        - $ref: '#/definitions/db.User'
        description: Thông tin người đề xuất
      offerer_exchange_items:
        description: Danh sách Gundam của người đề xuất
        items:
          $ref: '#/definitions/db.GundamDetails'
        type: array
      payer_id:
        description: ID người bù tiền
        type: string
      post_id:
        description: ID bài đăng trao đổi
        type: string
      poster_exchange_items:
        description: Danh sách Gundam của người đăng bài mà người đề xuất muốn trao
          đổi
        items:
          $ref: '#/definitions/db.GundamDetails'
        type: array
      updated_at:
        description: Thời gian cập nhật đề xuất gần nhất
        type: string
    required:
    - compensation_amount
    - created_at
    - id
    - last_negotiation_at
    - max_negotiations
    - negotiation_notes
    - negotiation_requested
    - negotiations_count
    - note
    - offerer
    - offerer_exchange_items
    - payer_id
    - post_id
    - poster_exchange_items
    - updated_at
    type: object
  db.ExchangeOfferItem:
    properties:
      created_at:
        type: string
      gundam_id:
        type: integer
      id:
        type: string
      is_from_poster:
        type: boolean
      offer_id:
        type: string
    required:
    - created_at
    - gundam_id
    - id
    - is_from_poster
    - offer_id
    type: object
  db.ExchangeOfferNote:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      offer_id:
        type: string
      user_id:
        type: string
    required:
    - content
    - created_at
    - id
    - offer_id
    - user_id
    type: object
  db.ExchangePost:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      post_image_urls:
        items:
          type: string
        type: array
      status:
        $ref: '#/definitions/db.ExchangePostStatus'
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - content
    - created_at
    - id
    - post_image_urls
    - status
    - updated_at
    - user_id
    type: object
  db.ExchangePostItem:
    properties:
      created_at:
        type: string
      gundam_id:
        type: integer
      id:
        type: string
      post_id:
        type: string
    required:
    - created_at
    - gundam_id
    - id
    - post_id
    type: object
  db.ExchangePostStatus:
    enum:
    - open
    - closed
    type: string
    x-enum-varnames:
    - ExchangePostStatusOpen
    - ExchangePostStatusClosed
  db.ExchangeStatus:
    enum:
    - pending
    - packaging
    - delivering
    - delivered
    - completed
    - canceled
    - failed
    type: string
    x-enum-varnames:
    - ExchangeStatusPending
    - ExchangeStatusPackaging
    - ExchangeStatusDelivering
    - ExchangeStatusDelivered
    - ExchangeStatusCompleted
    - ExchangeStatusCanceled
    - ExchangeStatusFailed
  db.ExchangeUserInfo:
    properties:
      avatar_url:
        description: URL ảnh đại diện người dùng
        type: string
      delivery_fee:
        description: Phí vận chuyển
        type: integer
      delivery_fee_paid:
        description: Đã thanh toán phí vận chuyển chưa
        type: boolean
      expected_delivery_time:
        description: Thời gian giao hàng dự kiến
        type: string
      from_address:
        allOf:
        - $ref: '#/definitions/db.DeliveryInformation'
        description: Địa chỉ gửi hàng
      full_name:
        description: Tên người dùng
        type: string
      id:
        description: Thông tin cơ bản
        type: string
      items:
        description: Danh sách Gundam
        items:
          $ref: '#/definitions/db.ExchangeItem'
        type: array
      note:
        description: Ghi chú của người dùng
        type: string
      order:
        allOf:
        - $ref: '#/definitions/db.Order'
        description: Thông tin đơn hàng và vận chuyển
      to_address:
        allOf:
        - $ref: '#/definitions/db.DeliveryInformation'
        description: Địa chỉ nhận hàng
    required:
    - avatar_url
    - delivery_fee
    - delivery_fee_paid
    - expected_delivery_time
    - from_address
    - full_name
    - id
    - items
    - note
    - order
    - to_address
    type: object
  db.GetSellerDetailByIDRow:
    properties:
      seller_profile:
        $ref: '#/definitions/db.SellerProfile'
      user:
        $ref: '#/definitions/db.User'
    required:
    - seller_profile
    - user
    type: object
  db.GundamAccessoryDTO:
    properties:
      name:
        type: string
      quantity:
        type: integer
    required:
    - name
    - quantity
    type: object
  db.GundamDetails:
    properties:
      accessories:
        items:
          $ref: '#/definitions/db.GundamAccessoryDTO'
        type: array
      condition:
        type: string
      condition_description:
        type: string
      created_at:
        type: string
      description:
        type: string
      grade:
        type: string
      gundam_id:
        type: integer
      manufacturer:
        type: string
      material:
        type: string
      name:
        type: string
      owner_id:
        type: string
      parts_total:
        type: integer
      price:
        type: integer
      primary_image_url:
        type: string
      quantity:
        type: integer
      release_year:
        type: integer
      scale:
        type: string
      secondary_image_urls:
        items:
          type: string
        type: array
      series:
        type: string
      slug:
        type: string
      status:
        type: string
      updated_at:
        type: string
      version:
        type: string
      weight:
        type: integer
    required:
    - accessories
    - condition
    - condition_description
    - created_at
    - description
    - grade
    - gundam_id
    - manufacturer
    - material
    - name
    - owner_id
    - parts_total
    - price
    - primary_image_url
    - quantity
    - release_year
    - scale
    - secondary_image_urls
    - series
    - slug
    - status
    - updated_at
    - version
    - weight
    type: object
  db.GundamGrade:
    properties:
      created_at:
        type: string
      display_name:
        type: string
      id:
        type: integer
      name:
        type: string
      slug:
        type: string
    required:
    - created_at
    - display_name
    - id
    - name
    - slug
    type: object
  db.GundamSnapshot:
    properties:
      grade:
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      quantity:
        type: integer
      scale:
        type: string
      slug:
        type: string
      weight:
        type: integer
    required:
    - grade
    - id
    - image_url
    - name
    - quantity
    - scale
    - slug
    - weight
    type: object
  db.ListCartItemsWithDetailsRow:
    properties:
      cart_item_id:
        type: string
      gundam_id:
        type: integer
      gundam_image_url:
        type: string
      gundam_name:
        type: string
      gundam_price:
        type: integer
      seller_avatar_url:
        type: string
      seller_id:
        type: string
      seller_name:
        type: string
    required:
    - cart_item_id
    - gundam_id
    - gundam_image_url
    - gundam_name
    - gundam_price
    - seller_avatar_url
    - seller_id
    - seller_name
    type: object
  db.ListUserParticipatedAuctionsRow:
    properties:
      auction:
        $ref: '#/definitions/db.Auction'
      auction_participant:
        $ref: '#/definitions/db.AuctionParticipant'
    required:
    - auction
    - auction_participant
    type: object
  db.MemberOrderDetails:
    properties:
      from_delivery_information:
        allOf:
        - $ref: '#/definitions/db.DeliveryInformation'
        description: Địa chỉ gửi hàng
      is_receiver:
        description: Có phải người nhận không
        type: boolean
      is_sender:
        description: Có phải người gửi không
        type: boolean
      order:
        allOf:
        - $ref: '#/definitions/db.Order'
        description: Thông tin đơn hàng
      order_delivery:
        allOf:
        - $ref: '#/definitions/db.OrderDelivery'
        description: Thông tin vận chuyển
      order_items:
        description: Danh sách sản phẩm trong đơn hàng
        items:
          $ref: '#/definitions/db.OrderItem'
        type: array
      receiver:
        allOf:
        - $ref: '#/definitions/db.User'
        description: Thông tin người nhận hàng (null nếu là người nhận)
      sender:
        allOf:
        - $ref: '#/definitions/db.Sender'
        description: Thông tin người gửi hàng (null nếu là người gửi)
      to_delivery_information:
        allOf:
        - $ref: '#/definitions/db.DeliveryInformation'
        description: Địa chỉ nhận hàng
    required:
    - from_delivery_information
    - is_receiver
    - is_sender
    - order
    - order_delivery
    - order_items
    - receiver
    - sender
    - to_delivery_information
    type: object
  db.MemberOrderInfo:
    properties:
      order:
        $ref: '#/definitions/db.Order'
      order_items:
        items:
          $ref: '#/definitions/db.OrderItem'
        type: array
    required:
    - order
    - order_items
    type: object
  db.ModeratorDashboard:
    properties:
      pending_auction_requests_count:
        description: Số lượng yêu cầu đấu giá đang chờ xử lý
        type: integer
      pending_withdrawal_requests_count:
        description: Số lượng yêu cầu rút tiền đang chờ xử lý
        type: integer
      total_exchanges_this_week:
        description: Tổng số cuộc trao đổi trong tuần này
        type: integer
      total_orders_this_week:
        description: Tổng số đơn hàng trong tuần này
        type: integer
    required:
    - pending_auction_requests_count
    - pending_withdrawal_requests_count
    - total_exchanges_this_week
    - total_orders_this_week
    type: object
  db.NullDeliveryOverralStatus:
    properties:
      delivery_overral_status:
        $ref: '#/definitions/db.DeliveryOverralStatus'
      valid:
        description: Valid is true if DeliveryOverralStatus is not NULL
        type: boolean
    required:
    - delivery_overral_status
    - valid
    type: object
  db.OpenExchangePostInfo:
    properties:
      exchange_post:
        allOf:
        - $ref: '#/definitions/db.ExchangePost'
        description: Thông tin bài đăng
      exchange_post_items:
        description: Danh sách Gundam mà Người đăng bài cho phép trao đổi
        items:
          $ref: '#/definitions/db.GundamDetails'
        type: array
      offer_count:
        description: Số lượng offer của bài đăng
        type: integer
      poster:
        allOf:
        - $ref: '#/definitions/db.User'
        description: Thông tin Người đăng bài
    required:
    - exchange_post
    - exchange_post_items
    - offer_count
    - poster
    type: object
  db.Order:
    properties:
      buyer_id:
        type: string
      canceled_by:
        type: string
      canceled_reason:
        type: string
      code:
        type: string
      completed_at:
        type: string
      created_at:
        type: string
      delivery_fee:
        type: integer
      id:
        type: string
      is_packaged:
        type: boolean
      items_subtotal:
        type: integer
      note:
        type: string
      packaging_image_urls:
        items:
          type: string
        type: array
      payment_method:
        $ref: '#/definitions/db.PaymentMethod'
      seller_id:
        type: string
      status:
        $ref: '#/definitions/db.OrderStatus'
      total_amount:
        type: integer
      type:
        $ref: '#/definitions/db.OrderType'
      updated_at:
        type: string
    required:
    - buyer_id
    - canceled_by
    - canceled_reason
    - code
    - completed_at
    - created_at
    - delivery_fee
    - id
    - is_packaged
    - items_subtotal
    - note
    - packaging_image_urls
    - payment_method
    - seller_id
    - status
    - total_amount
    - type
    - updated_at
    type: object
  db.OrderDelivery:
    properties:
      created_at:
        type: string
      delivery_tracking_code:
        type: string
      expected_delivery_time:
        type: string
      from_delivery_id:
        type: integer
      id:
        type: integer
      order_id:
        type: string
      overall_status:
        $ref: '#/definitions/db.NullDeliveryOverralStatus'
      status:
        type: string
      to_delivery_id:
        type: integer
      updated_at:
        type: string
    required:
    - created_at
    - delivery_tracking_code
    - expected_delivery_time
    - from_delivery_id
    - id
    - order_id
    - overall_status
    - status
    - to_delivery_id
    - updated_at
    type: object
  db.OrderItem:
    properties:
      created_at:
        type: string
      grade:
        type: string
      gundam_id:
        type: integer
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      order_id:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      scale:
        type: string
      slug:
        type: string
      weight:
        type: integer
    required:
    - created_at
    - grade
    - gundam_id
    - id
    - image_url
    - name
    - order_id
    - price
    - quantity
    - scale
    - slug
    - weight
    type: object
  db.OrderStatus:
    enum:
    - pending
    - packaging
    - delivering
    - delivered
    - completed
    - failed
    - canceled
    type: string
    x-enum-varnames:
    - OrderStatusPending
    - OrderStatusPackaging
    - OrderStatusDelivering
    - OrderStatusDelivered
    - OrderStatusCompleted
    - OrderStatusFailed
    - OrderStatusCanceled
  db.OrderTransaction:
    properties:
      amount:
        type: integer
      buyer_entry_id:
        type: integer
      completed_at:
        type: string
      created_at:
        type: string
      id:
        type: integer
      order_id:
        type: string
      seller_entry_id:
        type: integer
      status:
        $ref: '#/definitions/db.OrderTransactionStatus'
      updated_at:
        type: string
    required:
    - amount
    - buyer_entry_id
    - completed_at
    - created_at
    - id
    - order_id
    - seller_entry_id
    - status
    - updated_at
    type: object
  db.OrderTransactionStatus:
    enum:
    - pending
    - completed
    - refunded
    - failed
    type: string
    x-enum-varnames:
    - OrderTransactionStatusPending
    - OrderTransactionStatusCompleted
    - OrderTransactionStatusRefunded
    - OrderTransactionStatusFailed
  db.OrderType:
    enum:
    - regular
    - exchange
    - auction
    type: string
    x-enum-varnames:
    - OrderTypeRegular
    - OrderTypeExchange
    - OrderTypeAuction
  db.PackageOrderTxResult:
    properties:
      order:
        $ref: '#/definitions/db.Order'
      order_delivery:
        $ref: '#/definitions/db.OrderDelivery'
    required:
    - order
    - order_delivery
    type: object
  db.ParticipateInAuctionTxResult:
    properties:
      auction_participant:
        $ref: '#/definitions/db.AuctionParticipant'
      participant:
        $ref: '#/definitions/db.User'
      updated_auction:
        $ref: '#/definitions/db.Auction'
      updated_wallet:
        $ref: '#/definitions/db.Wallet'
    required:
    - auction_participant
    - participant
    - updated_auction
    - updated_wallet
    type: object
  db.PayAuctionWinningBidTxResult:
    properties:
      auction:
        $ref: '#/definitions/db.Auction'
      order:
        $ref: '#/definitions/db.Order'
      remaining_amount:
        type: integer
      wallet_entry:
        $ref: '#/definitions/db.WalletEntry'
    required:
    - auction
    - order
    - remaining_amount
    - wallet_entry
    type: object
  db.PayExchangeDeliveryFeeTxResult:
    properties:
      both_parties_paid:
        type: boolean
      exchange:
        $ref: '#/definitions/db.Exchange'
      offerer_order:
        $ref: '#/definitions/db.Order'
      partner_has_paid:
        type: boolean
      poster_order:
        $ref: '#/definitions/db.Order'
    required:
    - both_parties_paid
    - exchange
    - offerer_order
    - partner_has_paid
    - poster_order
    type: object
  db.PaymentMethod:
    enum:
    - cod
    - wallet
    type: string
    x-enum-varnames:
    - PaymentMethodCod
    - PaymentMethodWallet
  db.ProvideDeliveryAddressesForExchangeTxResult:
    properties:
      exchange:
        $ref: '#/definitions/db.Exchange'
    required:
    - exchange
    type: object
  db.RequestNegotiationForOfferTxResult:
    properties:
      note:
        allOf:
        - $ref: '#/definitions/db.ExchangeOfferNote'
        description: Có thể là nil nếu không có ghi chú
      offer:
        $ref: '#/definitions/db.ExchangeOffer'
    required:
    - note
    - offer
    type: object
  db.SalesOrderDetails:
    properties:
      from_delivery_information:
        allOf:
        - $ref: '#/definitions/db.DeliveryInformation'
        description: Địa chỉ gửi hàng
      order:
        allOf:
        - $ref: '#/definitions/db.Order'
        description: Thông tin đơn hàng
      order_delivery:
        allOf:
        - $ref: '#/definitions/db.OrderDelivery'
        description: Thông tin vận chuyển
      order_items:
        description: Danh sách sản phẩm trong đơn hàng
        items:
          $ref: '#/definitions/db.OrderItem'
        type: array
      receiver:
        allOf:
        - $ref: '#/definitions/db.User'
        description: Thông tin người nhận hàng
      to_delivery_information:
        allOf:
        - $ref: '#/definitions/db.DeliveryInformation'
        description: Địa chỉ nhận hàng
    required:
    - from_delivery_information
    - order
    - order_delivery
    - order_items
    - receiver
    - to_delivery_information
    type: object
  db.SalesOrderInfo:
    properties:
      order:
        $ref: '#/definitions/db.Order'
      order_items:
        items:
          $ref: '#/definitions/db.OrderItem'
        type: array
    required:
    - order
    - order_items
    type: object
  db.SellerDashboard:
    properties:
      active_auctions_count:
        description: Số lượng phiên đấu giá đang diễn ra
        type: integer
      completed_orders_count:
        description: Số lượng đơn hàng đã hoàn thành
        type: integer
      income_this_month:
        description: Thu nhập trong tháng hiện tại
        type: integer
      pending_auction_requests_count:
        description: Số lượng yêu cầu đấu giá đang chờ xử lý
        type: integer
      processing_orders_count:
        description: Số lượng đơn hàng đang xử lý
        type: integer
      published_gundams_count:
        description: Số lượng gundam đã đăng bán
        type: integer
      total_income:
        description: Tổng thu nhập từ việc bán + đấu giá gundam
        type: integer
    required:
    - active_auctions_count
    - completed_orders_count
    - income_this_month
    - pending_auction_requests_count
    - processing_orders_count
    - published_gundams_count
    - total_income
    type: object
  db.SellerProfile:
    properties:
      created_at:
        type: string
      seller_id:
        type: string
      shop_name:
        type: string
      updated_at:
        type: string
    required:
    - created_at
    - seller_id
    - shop_name
    - updated_at
    type: object
  db.SellerSubscription:
    properties:
      created_at:
        type: string
      end_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      listings_used:
        type: integer
      open_auctions_used:
        type: integer
      plan_id:
        type: integer
      seller_id:
        type: string
      start_date:
        type: string
      updated_at:
        type: string
    required:
    - created_at
    - end_date
    - id
    - is_active
    - listings_used
    - open_auctions_used
    - plan_id
    - seller_id
    - start_date
    - updated_at
    type: object
  db.Sender:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      email_verified:
        type: boolean
      full_name:
        type: string
      google_account_id:
        type: string
      id:
        type: string
      phone_number:
        type: string
      phone_number_verified:
        type: boolean
      role:
        $ref: '#/definitions/db.UserRole'
      shop_name:
        description: Tên shop (nếu có)
        type: string
      updated_at:
        type: string
    required:
    - avatar_url
    - created_at
    - deleted_at
    - email
    - email_verified
    - full_name
    - google_account_id
    - id
    - phone_number
    - phone_number_verified
    - role
    - shop_name
    - updated_at
    type: object
  db.SubscriptionPlan:
    properties:
      created_at:
        type: string
      duration_days:
        type: integer
      id:
        type: integer
      is_unlimited:
        type: boolean
      max_listings:
        type: integer
      max_open_auctions:
        type: integer
      name:
        type: string
      price:
        type: integer
    required:
    - created_at
    - duration_days
    - id
    - is_unlimited
    - max_listings
    - max_open_auctions
    - name
    - price
    type: object
  db.UpdateAuctionByModeratorTxResult:
    properties:
      updated_auction:
        $ref: '#/definitions/db.Auction'
    required:
    - updated_auction
    type: object
  db.UpdateExchangeOfferTxResult:
    properties:
      note:
        allOf:
        - $ref: '#/definitions/db.ExchangeOfferNote'
        description: Có thể là nil nếu không có ghi chú
      offer:
        $ref: '#/definitions/db.ExchangeOffer'
    required:
    - note
    - offer
    type: object
  db.UpgradeSubscriptionTxResult:
    properties:
      new_subscription:
        $ref: '#/definitions/db.SellerSubscription'
      old_subscription:
        $ref: '#/definitions/db.SellerSubscription'
      payment_entry:
        $ref: '#/definitions/db.WalletEntry'
    required:
    - new_subscription
    - old_subscription
    - payment_entry
    type: object
  db.User:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      email_verified:
        type: boolean
      full_name:
        type: string
      google_account_id:
        type: string
      id:
        type: string
      phone_number:
        type: string
      phone_number_verified:
        type: boolean
      role:
        $ref: '#/definitions/db.UserRole'
      updated_at:
        type: string
    required:
    - avatar_url
    - created_at
    - deleted_at
    - email
    - email_verified
    - full_name
    - google_account_id
    - id
    - phone_number
    - phone_number_verified
    - role
    - updated_at
    type: object
  db.UserAddress:
    properties:
      created_at:
        type: string
      detail:
        type: string
      district_name:
        type: string
      full_name:
        type: string
      ghn_district_id:
        type: integer
      ghn_ward_code:
        type: string
      id:
        type: integer
      is_pickup_address:
        type: boolean
      is_primary:
        type: boolean
      phone_number:
        type: string
      province_name:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      ward_name:
        type: string
    required:
    - created_at
    - detail
    - district_name
    - full_name
    - ghn_district_id
    - ghn_ward_code
    - id
    - is_pickup_address
    - is_primary
    - phone_number
    - province_name
    - updated_at
    - user_id
    - ward_name
    type: object
  db.UserBankAccount:
    properties:
      account_name:
        type: string
      account_number:
        type: string
      bank_code:
        type: string
      bank_name:
        type: string
      bank_short_name:
        type: string
      created_at:
        type: string
      id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - account_name
    - account_number
    - bank_code
    - bank_name
    - bank_short_name
    - created_at
    - id
    - updated_at
    - user_id
    type: object
  db.UserExchangeDetails:
    properties:
      canceled_by:
        description: Thông tin hủy (nếu có)
        type: string
      canceled_reason:
        description: Lý do hủy
        type: string
      compensation_amount:
        description: Số tiền bù (nếu có)
        type: integer
      completed_at:
        description: Thời gian hoàn thành
        type: string
      created_at:
        description: Thời gian tạo
        type: string
      current_user:
        allOf:
        - $ref: '#/definitions/db.ExchangeUserInfo'
        description: Thông tin về người tham gia
      id:
        description: ID của bài đăng trao đổi
        type: string
      offerer_id:
        description: ID người đề xuất
        type: string
      partner:
        allOf:
        - $ref: '#/definitions/db.ExchangeUserInfo'
        description: Thông tin người còn lại
      payer_id:
        description: Thông tin bù tiền
        type: string
      poster_id:
        description: Thông tin gốc về cuộc trao đổi (Ai đăng, ai đề xuất)
        type: string
      status:
        description: Thông tin cơ bản về cuộc trao đổi
        type: string
      updated_at:
        description: Thời gian cập nhật
        type: string
    required:
    - canceled_by
    - canceled_reason
    - compensation_amount
    - completed_at
    - created_at
    - current_user
    - id
    - offerer_id
    - partner
    - payer_id
    - poster_id
    - status
    - updated_at
    type: object
  db.UserExchangeOfferDetails:
    properties:
      exchange_post:
        allOf:
        - $ref: '#/definitions/db.ExchangePost'
        description: Thông tin bài đăng
      exchange_post_items:
        description: Danh sách Gundam mà Người đăng bài cho phép trao đổi
        items:
          $ref: '#/definitions/db.GundamDetails'
        type: array
      offer:
        allOf:
        - $ref: '#/definitions/db.ExchangeOfferInfo'
        description: Chi tiết đề xuất
      poster:
        allOf:
        - $ref: '#/definitions/db.User'
        description: Thông tin Người đăng bài
    required:
    - exchange_post
    - exchange_post_items
    - offer
    - poster
    type: object
  db.UserExchangePostDetails:
    properties:
      exchange_post:
        allOf:
        - $ref: '#/definitions/db.ExchangePost'
        description: Thông tin bài đăng
      exchange_post_items:
        description: Danh sách Gundam mà Người đăng bài cho phép trao đổi
        items:
          $ref: '#/definitions/db.GundamDetails'
        type: array
      offer_count:
        description: Số lượng offer của bài đăng
        type: integer
      offers:
        description: Danh sách các offer của bài đăng
        items:
          $ref: '#/definitions/db.ExchangeOfferInfo'
        type: array
    required:
    - exchange_post
    - exchange_post_items
    - offer_count
    - offers
    type: object
  db.UserRole:
    enum:
    - member
    - seller
    - moderator
    - admin
    type: string
    x-enum-varnames:
    - UserRoleMember
    - UserRoleSeller
    - UserRoleModerator
    - UserRoleAdmin
  db.Wallet:
    properties:
      balance:
        type: integer
      created_at:
        type: string
      currency:
        type: string
      non_withdrawable_amount:
        type: integer
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - balance
    - created_at
    - currency
    - non_withdrawable_amount
    - updated_at
    - user_id
    type: object
  db.WalletAffectedField:
    enum:
    - balance
    - non_withdrawable_amount
    - both
    type: string
    x-enum-varnames:
    - WalletAffectedFieldBalance
    - WalletAffectedFieldNonWithdrawableAmount
    - WalletAffectedFieldBoth
  db.WalletEntry:
    properties:
      affected_field:
        $ref: '#/definitions/db.WalletAffectedField'
      amount:
        type: integer
      completed_at:
        type: string
      created_at:
        type: string
      entry_type:
        $ref: '#/definitions/db.WalletEntryType'
      id:
        type: integer
      reference_id:
        type: string
      reference_type:
        $ref: '#/definitions/db.WalletReferenceType'
      status:
        $ref: '#/definitions/db.WalletEntryStatus'
      updated_at:
        type: string
      wallet_id:
        type: string
    required:
    - affected_field
    - amount
    - completed_at
    - created_at
    - entry_type
    - id
    - reference_id
    - reference_type
    - status
    - updated_at
    - wallet_id
    type: object
  db.WalletEntryStatus:
    enum:
    - pending
    - completed
    - canceled
    - failed
    type: string
    x-enum-varnames:
    - WalletEntryStatusPending
    - WalletEntryStatusCompleted
    - WalletEntryStatusCanceled
    - WalletEntryStatusFailed
  db.WalletEntryType:
    enum:
    - deposit
    - withdrawal
    - payment
    - payment_received
    - refund
    - hold_funds
    - release_funds
    - exchange_compensation_hold
    - exchange_compensation_transfer
    - exchange_compensation_release
    - auction_deposit
    - auction_deposit_refund
    - auction_compensation
    - auction_winner_payment
    - auction_seller_payment
    - subscription_payment
    type: string
    x-enum-varnames:
    - WalletEntryTypeDeposit
    - WalletEntryTypeWithdrawal
    - WalletEntryTypePayment
    - WalletEntryTypePaymentReceived
    - WalletEntryTypeRefund
    - WalletEntryTypeHoldFunds
    - WalletEntryTypeReleaseFunds
    - WalletEntryTypeExchangeCompensationHold
    - WalletEntryTypeExchangeCompensationTransfer
    - WalletEntryTypeExchangeCompensationRelease
    - WalletEntryTypeAuctionDeposit
    - WalletEntryTypeAuctionDepositRefund
    - WalletEntryTypeAuctionCompensation
    - WalletEntryTypeAuctionWinnerPayment
    - WalletEntryTypeAuctionSellerPayment
    - WalletEntryTypeSubscriptionPayment
  db.WalletReferenceType:
    enum:
    - order
    - auction
    - withdrawal_request
    - deposit_request
    - exchange
    - subscription
    type: string
    x-enum-varnames:
    - WalletReferenceTypeOrder
    - WalletReferenceTypeAuction
    - WalletReferenceTypeWithdrawalRequest
    - WalletReferenceTypeDepositRequest
    - WalletReferenceTypeExchange
    - WalletReferenceTypeSubscription
  db.WithdrawalRequest:
    properties:
      amount:
        type: integer
      bank_account_id:
        type: string
      completed_at:
        type: string
      created_at:
        type: string
      id:
        type: string
      processed_at:
        type: string
      processed_by:
        type: string
      rejected_reason:
        type: string
      status:
        $ref: '#/definitions/db.WithdrawalRequestStatus'
      transaction_reference:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      wallet_entry_id:
        type: integer
    required:
    - amount
    - bank_account_id
    - completed_at
    - created_at
    - id
    - processed_at
    - processed_by
    - rejected_reason
    - status
    - transaction_reference
    - updated_at
    - user_id
    - wallet_entry_id
    type: object
  db.WithdrawalRequestDetails:
    properties:
      amount:
        type: integer
      bank_account:
        $ref: '#/definitions/db.UserBankAccount'
      completed_at:
        type: string
      created_at:
        type: string
      id:
        type: string
      processed_at:
        type: string
      processed_by:
        type: string
      rejected_reason:
        type: string
      status:
        $ref: '#/definitions/db.WithdrawalRequestStatus'
      transaction_reference:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      wallet_entry_id:
        type: integer
    required:
    - amount
    - bank_account
    - completed_at
    - created_at
    - id
    - processed_at
    - processed_by
    - rejected_reason
    - status
    - transaction_reference
    - updated_at
    - user_id
    - wallet_entry_id
    type: object
  db.WithdrawalRequestStatus:
    enum:
    - pending
    - approved
    - completed
    - rejected
    - canceled
    type: string
    x-enum-varnames:
    - WithdrawalRequestStatusPending
    - WithdrawalRequestStatusApproved
    - WithdrawalRequestStatusCompleted
    - WithdrawalRequestStatusRejected
    - WithdrawalRequestStatusCanceled
  multipart.FileHeader:
    properties:
      filename:
        type: string
      header:
        $ref: '#/definitions/textproto.MIMEHeader'
      size:
        type: integer
    type: object
  textproto.MIMEHeader:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
  zalopay.CreateOrderZalopayResponse:
    properties:
      order_token:
        type: string
      order_url:
        type: string
      qr_code:
        type: string
      return_code:
        type: integer
      return_message:
        type: string
      sub_return_code:
        type: integer
      sub_return_message:
        type: string
      zp_trans_token:
        type: string
    required:
    - order_token
    - order_url
    - qr_code
    - return_code
    - return_message
    - sub_return_code
    - sub_return_message
    - zp_trans_token
    type: object
host: localhost:8080
info:
  contact: {}
  description: API documentation for Gundam Platform application
  title: Gundam Platform API
  version: 1.0.0
paths:
  /admin/dashboard:
    get:
      description: Get comprehensive dashboard statistics for admin including business
        metrics with order type breakdowns
      produces:
      - application/json
      responses:
        "200":
          description: Dashboard statistics with order type details
          schema:
            $ref: '#/definitions/db.AdminDashboard'
      security:
      - accessToken: []
      summary: Get admin dashboard statistics
      tags:
      - admin
  /auctions:
    get:
      description: Retrieves upcoming and ongoing auctions from the platform.
      parameters:
      - description: Filter by status
        enum:
        - scheduled
        - active
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of auctions
          schema:
            items:
              $ref: '#/definitions/db.AuctionDetails'
            type: array
      summary: Get platform auctions
      tags:
      - auctions
  /auctions/{auctionID}:
    get:
      description: Retrieves details of a specific auction by its ID.
      parameters:
      - description: ID of the auction
        in: path
        name: auctionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the auction
          schema:
            $ref: '#/definitions/db.AuctionDetails'
      summary: Get auction details
      tags:
      - auctions
  /auctions/{auctionID}/stream:
    get:
      description: Establishes an SSE connection to receive real-time updates about
        an auction
      parameters:
      - description: Auction ID
        in: path
        name: auctionID
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: SSE connection established
        "400":
          description: Invalid auction ID format
        "404":
          description: Auction not found
        "500":
          description: Internal server error
      summary: Stream auction events via Server-Sent Events
      tags:
      - auctions
  /auth/google-login:
    post:
      consumes:
      - application/json
      description: Authenticate a user using Google ID token. If the user doesn't
        exist, a new user will be created.
      parameters:
      - description: Google ID Token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.loginUserWithGoogleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            $ref: '#/definitions/api.loginUserResponse'
        "400":
          description: Invalid request body
        "401":
          description: Invalid Google ID token
        "500":
          description: Internal server error
      summary: Login or register a user with Google account
      tags:
      - authentication
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return access token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.loginUserResponse'
        "400":
          description: Invalid request parameters
        "401":
          description: Incorrect password
        "404":
          description: Email not found
        "500":
          description: Internal server error
      summary: Login user
      tags:
      - authentication
  /cart/items:
    get:
      description: Retrieves all items in the user's shopping cart with detailed information
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved cart items
          schema:
            items:
              $ref: '#/definitions/db.ListCartItemsWithDetailsRow'
            type: array
      security:
      - accessToken: []
      summary: List Cart Items
      tags:
      - cart
    post:
      consumes:
      - application/json
      description: Adds a Gundam model to the user's shopping cart
      parameters:
      - description: Gundam to add to cart
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.addCartItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added item to cart
          schema:
            $ref: '#/definitions/db.AddCartItemRow'
      security:
      - accessToken: []
      summary: Add Item to Cart
      tags:
      - cart
  /cart/items/{id}:
    delete:
      description: Removes a specific item from the user's shopping cart
      parameters:
      - description: Cart Item ID to delete
        example: "1"
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Successfully deleted cart item
      security:
      - accessToken: []
      summary: Delete Cart Item
      tags:
      - cart
  /check-email:
    post:
      consumes:
      - application/json
      description: Checks if an email already exists in the database
      parameters:
      - description: Check email request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.checkEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Check Email Exists
      tags:
      - authentication
  /exchange-posts:
    get:
      description: List all open exchange posts.
      produces:
      - application/json
      responses:
        "200":
          description: List of open exchange posts
          schema:
            items:
              $ref: '#/definitions/db.OpenExchangePostInfo'
            type: array
      summary: List all open exchange posts
      tags:
      - exchanges
  /exchanges:
    get:
      description: Retrieves a list of all exchanges that the authenticated user is
        participating in.
      parameters:
      - description: Filter by status (pending, packaging, delivering, delivered,
          completed, canceled, failed)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of user's exchanges
          schema:
            items:
              $ref: '#/definitions/db.UserExchangeDetails'
            type: array
      security:
      - accessToken: []
      summary: List user's exchanges
      tags:
      - exchanges
  /exchanges/{exchangeID}:
    get:
      description: Retrieves detailed information about a specific exchange.
      parameters:
      - description: Exchange ID
        in: path
        name: exchangeID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Exchange details
          schema:
            $ref: '#/definitions/db.UserExchangeDetails'
      security:
      - accessToken: []
      summary: Get exchange details
      tags:
      - exchanges
  /exchanges/{exchangeID}/cancel:
    patch:
      consumes:
      - application/json
      description: Cancel an exchange transaction that is in pending or packaging
        status
      parameters:
      - description: Exchange ID
        example: 123e4567-e89b-12d3-a456-426614174000
        in: path
        name: exchangeID
        required: true
        type: string
      - description: Cancel exchange request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.cancelExchangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Exchange canceled successfully
          schema:
            $ref: '#/definitions/db.CancelExchangeTxResult'
      security:
      - accessToken: []
      summary: Cancel an exchange
      tags:
      - exchanges
  /exchanges/{exchangeID}/delivery-addresses:
    put:
      consumes:
      - application/json
      description: Provides shipping addresses (from and to) for an exchange transaction.
        Both participants must provide their addresses before proceeding.
      parameters:
      - description: Exchange ID
        in: path
        name: exchangeID
        required: true
        type: string
      - description: Delivery addresses information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.provideExchangeDeliveryAddressesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.ProvideDeliveryAddressesForExchangeTxResult'
      security:
      - accessToken: []
      summary: Provide delivery addresses for exchange
      tags:
      - exchanges
  /exchanges/{exchangeID}/pay-delivery-fee:
    post:
      consumes:
      - application/json
      description: Pays the delivery fee for an exchange transaction. When both parties
        have paid, the system creates two orders.
      parameters:
      - description: Exchange ID
        in: path
        name: exchangeID
        required: true
        type: string
      - description: Delivery fee information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.payExchangeDeliveryFeeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.PayExchangeDeliveryFeeTxResult'
      security:
      - accessToken: []
      summary: Pay delivery fee for exchange
      tags:
      - exchanges
  /grades:
    get:
      description: Retrieves a list of all available Gundam model grades
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of Gundam grades
          schema:
            items:
              $ref: '#/definitions/db.GundamGrade'
            type: array
        "500":
          description: Internal Server Error - Failed to retrieve Gundam grades
      summary: List Gundam Grades
      tags:
      - gundams
  /gundams:
    get:
      description: Retrieves a list of selling Gundams, optionally filtered by grade
      parameters:
      - description: Filter by Gundam name
        example: YR-04 Fire Lord
        in: query
        name: name
        type: string
      - description: Filter by Gundam grade slug
        example: master-grade
        in: query
        name: grade
        type: string
      - description: Filter by Gundam status
        enum:
        - in store
        - published
        - processing
        - pending auction approval
        - auctioning
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of Gundams
          schema:
            items:
              $ref: '#/definitions/db.GundamDetails'
            type: array
        "400":
          description: Bad Request - Invalid query parameters
        "500":
          description: Internal Server Error - Failed to retrieve Gundams
      summary: List Gundams
      tags:
      - gundams
  /gundams/:gundamID:
    get:
      description: Retrieves detailed information about a specific Gundam model
      parameters:
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved Gundam details
          schema:
            $ref: '#/definitions/db.GundamDetails'
      summary: Get Gundam details
      tags:
      - gundams
  /gundams/by-slug/{slug}:
    get:
      description: Retrieves a specific Gundam model by its unique slug
      parameters:
      - description: Gundam model slug
        example: rx-78-2-gundam
        in: path
        name: slug
        required: true
        type: string
      - description: Filter by Gundam status
        enum:
        - in store
        - published
        - processing
        - pending auction approval
        - auctioning
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved Gundam details
          schema:
            $ref: '#/definitions/db.GundamDetails'
        "404":
          description: Not Found - Gundam with specified slug does not exist
        "500":
          description: Internal Server Error - Failed to retrieve Gundam
      summary: Get Gundam by Slug
      tags:
      - gundams
  /mod/auction-requests:
    get:
      description: Get a list of all auction requests with optional status filter.
      parameters:
      - description: Filter by auction request status
        enum:
        - pending
        - approved
        - rejected
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of auction requests
          schema:
            items:
              $ref: '#/definitions/db.AuctionRequest'
            type: array
      security:
      - accessToken: []
      summary: List all auction requests for moderator
      tags:
      - moderator
  /mod/auction-requests/{requestID}/approve:
    patch:
      description: ModeratorID approves an auction request and schedules the auction.
      parameters:
      - description: Auction Request ID (UUID format)
        in: path
        name: requestID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the approval transaction
          schema:
            $ref: '#/definitions/db.ApproveAuctionRequestTxResult'
      security:
      - accessToken: []
      summary: Approve an auction request by moderator
      tags:
      - moderator
  /mod/auction-requests/{requestID}/reject:
    patch:
      consumes:
      - application/json
      description: ModeratorID rejects an auction request with a reason.
      parameters:
      - description: Auction Request ID (UUID format)
        in: path
        name: requestID
        required: true
        type: string
      - description: Rejection reason
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.rejectAuctionRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: Rejected auction request
          schema:
            $ref: '#/definitions/db.AuctionRequest'
      security:
      - accessToken: []
      summary: Reject an auction request by moderator
      tags:
      - moderator
  /mod/auctions:
    get:
      description: List all auctions with optional status filter.
      parameters:
      - description: Filter by status
        enum:
        - scheduled
        - active
        - ended
        - completed
        - failed
        - canceled
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of auctions
          schema:
            items:
              $ref: '#/definitions/db.AuctionDetails'
            type: array
      security:
      - accessToken: []
      summary: List auctions for moderator
      tags:
      - moderator
  /mod/auctions/{auctionID}:
    patch:
      consumes:
      - application/json
      description: ModeratorID can update auction start and end times.
      parameters:
      - description: Auction ID (UUID format)
        in: path
        name: auctionID
        required: true
        type: string
      - description: Updated auction details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateAuctionDetailsByModeratorBody'
      produces:
      - application/json
      responses:
        "200":
          description: Updated auction details
          schema:
            $ref: '#/definitions/db.UpdateAuctionByModeratorTxResult'
      security:
      - accessToken: []
      summary: Update auction details by moderator
      tags:
      - moderator
  /mod/dashboard:
    get:
      description: Get dashboard statistics for moderator including pending tasks
        and platform activity volume
      produces:
      - application/json
      responses:
        "200":
          description: Dashboard statistics
          schema:
            $ref: '#/definitions/db.ModeratorDashboard'
      security:
      - accessToken: []
      summary: Get moderator dashboard statistics
      tags:
      - moderator
  /mod/withdrawal-requests:
    get:
      description: List all withdrawal requests for moderators
      parameters:
      - description: Filter by withdrawal request status
        enum:
        - pending
        - approved
        - rejected
        - completed
        - rejected
        - canceled
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of withdrawal requests
          schema:
            items:
              $ref: '#/definitions/db.WithdrawalRequestDetails'
            type: array
      security:
      - accessToken: []
      summary: List withdrawal requests
      tags:
      - moderator
  /mod/withdrawal-requests/{requestID}/complete:
    patch:
      consumes:
      - application/json
      description: |-
        Complete a withdrawal request with transaction reference from bank.
        The request must be in pending or approved status.
      parameters:
      - description: Withdrawal Request ID
        in: path
        name: requestID
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.completeWithdrawalRequestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated withdrawal request details
          schema:
            $ref: '#/definitions/db.WithdrawalRequestDetails'
      security:
      - accessToken: []
      summary: Complete withdrawal request
      tags:
      - moderator
  /mod/withdrawal-requests/{requestID}/reject:
    patch:
      consumes:
      - application/json
      description: Reject a withdrawal request with reason from moderator. The request
        must be in pending status.
      parameters:
      - description: Withdrawal Request ID
        in: path
        name: requestID
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.rejectWithdrawalRequestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated withdrawal request details
          schema:
            $ref: '#/definitions/db.WithdrawalRequestDetails'
      security:
      - accessToken: []
      summary: Reject withdrawal request
      tags:
      - moderator
  /orders:
    get:
      description: List all orders of a member with optional filtering by order status
      parameters:
      - description: Filter by order status
        enum:
        - pending
        - packaging
        - delivering
        - delivered
        - completed
        - canceled
        - failed
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of orders
          schema:
            items:
              $ref: '#/definitions/db.MemberOrderInfo'
            type: array
      security:
      - accessToken: []
      summary: List all orders of a member
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create a new order for purchasing Gundam models
      parameters:
      - description: FailedOrder details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: FailedOrder created successfully
          schema:
            $ref: '#/definitions/db.CreateOrderTxResult'
      security:
      - accessToken: []
      summary: Create a new order
      tags:
      - orders
  /orders/{orderID}:
    get:
      description: Get details of a specific order for a member
      parameters:
      - description: FailedOrder ID
        example: 123e4567-e89b-12d3-a456-426614174000
        in: path
        name: orderID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: FailedOrder details
          schema:
            $ref: '#/definitions/db.MemberOrderDetails'
      security:
      - accessToken: []
      summary: Get order details for a member
      tags:
      - orders
  /orders/{orderID}/cancel:
    patch:
      consumes:
      - application/json
      description: Allows the buyer to cancel a regular order that is only in pending.
      parameters:
      - description: FailedOrder ID
        example: 123e4567-e89b-12d3-a456-426614174000
        in: path
        name: orderID
        required: true
        type: string
      - description: Cancel order request
        in: body
        name: request
        schema:
          $ref: '#/definitions/api.cancelOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: FailedOrder canceled successfully
          schema:
            $ref: '#/definitions/db.CancelOrderByBuyerTxResult'
      security:
      - accessToken: []
      summary: Cancel order by buyer
      tags:
      - orders
  /orders/{orderID}/complete:
    patch:
      description: Confirm that the receiver has received the order. For regular orders,
        it completes the transaction and transfers payment to seller. For exchange
        orders, it updates exchange status and may complete the exchange if both parties
        have confirmed. For auction orders, it completes the auction transaction.
      parameters:
      - description: FailedOrder ID
        example: 123e4567-e89b-12d3-a456-426614174000
        in: path
        name: orderID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: FailedOrder completed successfully
      security:
      - accessToken: []
      summary: Confirm order received
      tags:
      - orders
  /orders/{orderID}/package:
    patch:
      consumes:
      - multipart/form-data
      description: |-
        Upload package images, create a delivery order, and update order status for a specified order.
        Handles packaging for regular orders, exchange orders, and auction orders (future).
      parameters:
      - description: FailedOrder ID in UUID format
        in: path
        name: orderID
        required: true
        type: string
      - description: Package images (at least one image required)
        in: formData
        name: package_images
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully packaged order with delivery details
          schema:
            $ref: '#/definitions/db.PackageOrderTxResult'
      security:
      - accessToken: []
      summary: Package an order for delivery
      tags:
      - orders
  /otp/email/generate:
    post:
      consumes:
      - application/json
      description: Generates and sends an OTP to the specified email address
      parameters:
      - description: OTP Generation Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GenerateEmailOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP generated successfully
          schema:
            $ref: '#/definitions/api.GenerateEmailOTPResponse'
        "400":
          description: Bad Request - Invalid input
        "429":
          description: Too Many Requests - OTP request rate limit exceeded
        "500":
          description: Internal Server Error
      summary: Generate a One-Time Password (OTP) for email
      tags:
      - authentication
  /otp/email/verify:
    post:
      consumes:
      - application/json
      description: Verifies the OTP sent to a user's email address and updates the
        user's email if valid
      parameters:
      - description: OTP Verification Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.VerifyEmailOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP verified successfully
        "400":
          description: Bad Request - Invalid input or OTP verification failed
        "401":
          description: Unauthorized - Invalid OTP code
        "500":
          description: Internal Server Error - Failed to update user information
      summary: Verify One-Time Password (OTP) via email
      tags:
      - authentication
  /otp/phone-number/generate:
    post:
      consumes:
      - application/json
      description: Generates and sends an OTP to the specified phone number. The OTP
        will be valid for 10 minutes.
      parameters:
      - description: OTP Generation Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GeneratePhoneOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP generated successfully
          schema:
            $ref: '#/definitions/api.GeneratePhoneOTPResponse'
        "400":
          description: Bad Request - Invalid phone number format
        "500":
          description: Internal Server Error - Failed to generate or send OTP
      summary: Generate a One-Time Password (OTP) for phone number
      tags:
      - authentication
  /otp/phone-number/verify:
    post:
      consumes:
      - application/json
      description: Verifies the OTP sent to a user's phone number and updates the
        user's phone number if valid
      parameters:
      - description: OTP Verification Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.VerifyPhoneOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP verified successfully
        "400":
          description: Bad Request - Invalid input or OTP verification failed
        "401":
          description: Unauthorized - Invalid OTP code
        "404":
          description: Not Found - User not found
        "500":
          description: Internal Server Error - Failed to update user information
      summary: Verify One-Time Password (OTP) via phone number
      tags:
      - authentication
  /seller/profile:
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific seller
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Seller profile details
          schema:
            $ref: '#/definitions/db.GetSellerDetailByIDRow'
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Get seller profile
      tags:
      - seller profile
    patch:
      consumes:
      - application/json
      description: Update the seller's profile information
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateSellerProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated seller profile
          schema:
            $ref: '#/definitions/db.SellerProfile'
        "400":
          description: Invalid request body
        "404":
          description: Seller not found
        "500":
          description: Internal server error
      summary: Update seller profile
      tags:
      - seller profile
    post:
      consumes:
      - application/json
      description: Creates a new seller profile
      parameters:
      - description: Seller profile creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createSellerProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Seller profile created successfully
          schema:
            $ref: '#/definitions/db.SellerProfile'
        "400":
          description: Invalid request format
        "409":
          description: Seller profile already exists
        "500":
          description: Internal server error
      summary: Create a seller profile
      tags:
      - seller profile
  /sellers/{sellerID}/auction-requests:
    get:
      description: List all auction requests that belong to the specified seller,
        optionally filtered by status
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      - description: Filter by status
        enum:
        - pending
        - approved
        - rejected
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of auction requests
          schema:
            items:
              $ref: '#/definitions/db.AuctionRequest'
            type: array
      security:
      - accessToken: []
      summary: List auction requests of a seller
      tags:
      - auctions
    post:
      consumes:
      - application/json
      description: Create a new auction request for a Gundam model
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      - description: Auction request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createAuctionRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created auction request
          schema:
            $ref: '#/definitions/db.AuctionRequest'
      security:
      - accessToken: []
      summary: Create a new auction request by seller
      tags:
      - auctions
  /sellers/{sellerID}/auction-requests/{requestID}:
    delete:
      description: Delete an auction request. Only requests with 'pending' or 'rejected'
        status can be deleted.
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      - description: Auction Request ID (UUID format)
        in: path
        name: requestID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted auction request
      security:
      - accessToken: []
      summary: Delete an auction request by seller
      tags:
      - auctions
  /sellers/{sellerID}/auctions:
    get:
      description: List all auctions that belong to the specified seller, optionally
        filtered by status
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      - description: Filter by status
        enum:
        - scheduled
        - active
        - ended
        - completed
        - failed
        - canceled
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of auctions
          schema:
            items:
              $ref: '#/definitions/db.AuctionDetails'
            type: array
      security:
      - accessToken: []
      summary: List all auctions of a seller
      tags:
      - auctions
  /sellers/{sellerID}/auctions/{auctionID}:
    get:
      description: Get details of a specific auction for the seller
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      - description: Auction ID (UUID format)
        in: path
        name: auctionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Auction details
          schema:
            $ref: '#/definitions/db.AuctionDetails'
      security:
      - accessToken: []
      summary: Get auction details by seller
      tags:
      - auctions
  /sellers/{sellerID}/auctions/{auctionID}/cancel:
    patch:
      consumes:
      - application/json
      description: |-
        Cancel an auction that is in 'scheduled' status (has not started yet). This endpoint allows sellers to cancel their own auctions before they begin.

        **Quy tắc nghiệp vụ:**
        - Chỉ chủ sở hữu phiên đấu giá (người bán) mới có thể hủy
        - Chỉ có thể hủy phiên đấu giá có trạng thái 'scheduled' (chưa bắt đầu)
        - Không thể hủy phiên đấu giá đang 'active', 'ended', 'completed', hoặc 'failed'
        - Lý do hủy là tùy chọn (không bắt buộc)

        **Kết quả sau khi hủy:**
        1. Trạng thái đấu giá chuyển từ 'scheduled' sang 'canceled'
        2. Trạng thái Gundam chuyển từ 'auctioning' về 'in store' (có thể đăng bán lại)
        3. Hoàn trả 1 lượt đăng đấu giá trong gói đăng ký của người bán
        4. Người bán có thể tạo yêu cầu đấu giá mới (nếu còn quota)
      parameters:
      - description: Auction ID (UUID format)
        in: path
        name: auctionID
        required: true
        type: string
      - description: Seller ID
        example: s123e456-e789-45d0-9876-54321abcdef
        in: path
        name: sellerID
        required: true
        type: string
      - description: Cancellation request with optional reason
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.cancelAuctionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully cancelled auction with updated details
          schema:
            $ref: '#/definitions/db.Auction'
      security:
      - accessToken: []
      summary: Cancel a scheduled auction
      tags:
      - auctions
  /sellers/{sellerID}/dashboard:
    get:
      description: Get comprehensive dashboard statistics for a seller including gundam
        counts, income, orders, and auction data
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Dashboard statistics
          schema:
            $ref: '#/definitions/db.SellerDashboard'
      security:
      - accessToken: []
      summary: Get seller dashboard statistics
      tags:
      - sellers
  /sellers/{sellerID}/gundams/{gundamID}/publish:
    patch:
      consumes:
      - application/json
      description: Publish a gundam for sale for the specified seller. This endpoint
        checks the gundam's status before proceeding.
      parameters:
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: integer
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully published gundam
          schema:
            additionalProperties: true
            type: object
      security:
      - accessToken: []
      summary: Publish a gundam for sale
      tags:
      - sellers
  /sellers/{sellerID}/gundams/{gundamID}/unpublish:
    patch:
      consumes:
      - application/json
      description: Unpublish a gundam for the specified seller. This endpoint checks
        the gundam's status before proceeding.
      parameters:
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: integer
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully unsold gundam with details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid gundam ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Seller does not own this gundam
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Seller not found<br/>Gundam not found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Gundam is not currently listed for sale
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - accessToken: []
      summary: Unpublish a gundam
      tags:
      - sellers
  /sellers/{sellerID}/orders:
    get:
      consumes:
      - application/json
      description: Get all sales orders that belong to the specified seller ID
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      - description: Filter by order status
        enum:
        - pending
        - packaging
        - delivering
        - delivered
        - completed
        - canceled
        - failed
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of sales orders
          schema:
            items:
              $ref: '#/definitions/db.SalesOrderInfo'
            type: array
      security:
      - accessToken: []
      summary: List all sales orders (excluding exchange orders) for a specific seller
      tags:
      - sellers
  /sellers/{sellerID}/orders/:orderID:
    get:
      consumes:
      - application/json
      description: Get details of a specific sales order for the seller
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      - description: FailedOrder ID
        in: path
        name: orderID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Sales order details
          schema:
            $ref: '#/definitions/db.SalesOrderDetails'
      security:
      - accessToken: []
      summary: Get sales order details (excluding exchange orders)
      tags:
      - sellers
  /sellers/{sellerID}/orders/:orderID/confirm:
    patch:
      consumes:
      - application/json
      description: Confirm an order for the specified seller. This endpoint checks
        the order's status before proceeding.
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      - description: FailedOrder ID
        in: path
        name: orderID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully confirmed order
          schema:
            $ref: '#/definitions/db.ConfirmOrderTxResult'
      security:
      - accessToken: []
      summary: Confirm an order
      tags:
      - sellers
  /sellers/{sellerID}/orders/{orderID}/cancel:
    patch:
      consumes:
      - application/json
      description: Cancel a pending order by the seller
      parameters:
      - description: Seller ID
        example: s123e456-e789-45d0-9876-54321abcdef
        in: path
        name: sellerID
        required: true
        type: string
      - description: FailedOrder ID
        example: 123e4567-e89b-12d3-a456-426614174000
        in: path
        name: orderID
        required: true
        type: string
      - description: Cancellation reason
        in: body
        name: request
        schema:
          $ref: '#/definitions/api.cancelOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: FailedOrder canceled successfully
          schema:
            $ref: '#/definitions/db.CancelOrderBySellerTxResult'
      security:
      - accessToken: []
      summary: Cancel order by seller
      tags:
      - sellers
  /sellers/{sellerID}/subscriptions/active:
    get:
      description: Get the current active subscription details for the specified seller
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Current active subscription details
          schema:
            $ref: '#/definitions/api.SubscriptionDetailsResponse'
      security:
      - accessToken: []
      summary: Get current active subscription
      tags:
      - sellers
  /sellers/{sellerID}/subscriptions/upgrade:
    post:
      consumes:
      - application/json
      description: |-
        Upgrade seller's subscription to a higher tier plan with the following business rules:

        **Business Rules:**
        1. **Same Plan Rule**: Không thể nâng cấp lên chính gói đang sử dụng
        2. **Free Plan Downgrade Rule**: Không thể hạ cấp từ bất kỳ gói trả phí nào về gói miễn phí
        3. **Paid Plan Downgrade Rule**: Không thể hạ cấp từ gói trả phí cao hơn xuống gói trả phí thấp hơn (ví dụ: từ "GÓI KHÔNG GIỚI HẠN" xuống "GÓI NÂNG CẤP")
        4. **Balance Rule**: Phải có đủ số dư trong ví để thanh toán **toàn bộ** giá gói đích (không tính phần hoàn lại từ gói cũ)

        **Các trường hợp nâng cấp hợp lệ:**
        - Từ "GÓI DÙNG THỬ" (miễn phí) lên "GÓI NÂNG CẤP" (359.000 VND) - **Thanh toán: 359.000 VND**
        - Từ "GÓI DÙNG THỬ" (miễn phí) lên "GÓI KHÔNG GIỚI HẠN" (1.049.000 VND) - **Thanh toán: 1.049.000 VND**
        - Từ "GÓI NÂNG CẤP" (359.000 VND) lên "GÓI KHÔNG GIỚI HẠN" (1.049.000 VND) - **Thanh toán: 1.049.000 VND**

        **Chính sách thanh toán:**
        - **Thanh toán toàn bộ**: Người dùng sẽ thanh toán 100% giá trị của gói đích, không có hoàn tiền từ gói cũ
        - **Lý do**: Đảm bảo tính đơn giản trong hệ thống và người dùng được hưởng đầy đủ benefits mới ngay lập tức
        - **Ví dụ**: Nâng cấp từ GÓI NÂNG CẤP (đã dùng 75% thời hạn) lên GÓI KHÔNG GIỚI HẠN vẫn phải trả đủ 1.049.000 VND

        **Tác động khi nâng cấp thành công:**
        - Gói đăng ký cũ sẽ bị vô hiệu hóa ngay lập tức (không hoàn tiền phần chưa sử dụng)
        - Gói đăng ký mới được kích hoạt với hạn mức hoàn toàn mới (listings_used = 0, open_auctions_used = 0)
        - Chu kỳ đăng ký mới bắt đầu từ thời điểm nâng cấp với đầy đủ thời hạn của gói mới
        - Số tiền được trừ từ ví là 100% giá trị gói đích
        - Gửi thông báo cho người bán về việc nâng cấp thành công

        **Lưu ý quan trọng:**
        - Không có chính sách hoàn tiền cho gói cũ chưa hết hạn
        - Nên cân nhắc thời điểm nâng cấp để tối ưu chi phí
        - Sau khi nâng cấp, tất cả các hạn mức sử dụng sẽ được reset về 0
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      - description: Upgrade subscription request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.upgradeSubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Upgrade successfully
          schema:
            $ref: '#/definitions/db.UpgradeSubscriptionTxResult'
      security:
      - accessToken: []
      summary: Upgrade subscription plan
      tags:
      - sellers
  /subscription-plans:
    get:
      description: Get a list of all available subscription plans.
      produces:
      - application/json
      responses:
        "200":
          description: All available subscription plans
          schema:
            items:
              $ref: '#/definitions/db.SubscriptionPlan'
            type: array
      summary: List all subscription plans
      tags:
      - sellers
  /tokens/verify:
    post:
      consumes:
      - application/json
      description: Verifies a JWT access token and returns the associated user
      parameters:
      - description: Token verification request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.verifyAccessTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User information
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Invalid request format
        "401":
          description: Invalid or expired token
      summary: Verify access token
      tags:
      - authentication
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user with email and password
      parameters:
      - description: User creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created user
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Invalid request body
        "409":
          description: Email already exists
        "422":
          description: Validation error
        "500":
          description: Internal server error
      summary: Create a new user
      tags:
      - authentication
  /users/:id/gundams:
    get:
      consumes:
      - application/json
      description: Get all gundams that belong to the specified user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam name to filter by
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of gundams
          schema:
            items:
              $ref: '#/definitions/db.GundamDetails'
            type: array
      security:
      - accessToken: []
      summary: List all gundams for a specific user
      tags:
      - users
    post:
      consumes:
      - multipart/form-data
      description: Create a new Gundam model with images and accessories
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam name
        in: formData
        name: name
        required: true
        type: string
      - description: Gundam grade ID
        in: formData
        name: grade_id
        required: true
        type: integer
      - description: Gundam series name
        in: formData
        name: series
        required: true
        type: string
      - description: Total number of parts
        in: formData
        name: parts_total
        required: true
        type: integer
      - description: Gundam material
        in: formData
        name: material
        required: true
        type: string
      - description: Gundam version
        in: formData
        name: version
        required: true
        type: string
      - description: Condition of the Gundam
        enum:
        - new
        - open box
        - used
        in: formData
        name: condition
        required: true
        type: string
      - description: Manufacturer name
        in: formData
        name: manufacturer
        required: true
        type: string
      - description: Gundam scale
        enum:
        - 1/144
        - 1/100
        - 1/60
        in: formData
        name: scale
        required: true
        type: string
      - description: Weight in grams
        in: formData
        name: weight
        required: true
        type: integer
      - description: Detailed description
        in: formData
        name: description
        required: true
        type: string
      - description: Price in VND
        in: formData
        name: price
        type: integer
      - description: Release year
        in: formData
        name: release_year
        type: integer
      - description: Primary image of the Gundam
        in: formData
        name: primary_image
        required: true
        type: file
      - description: Secondary images of the Gundam
        in: formData
        name: secondary_images
        required: true
        type: file
      - description: Additional details about condition
        in: formData
        name: condition_description
        type: string
      - description: Accessory as JSON object. Add multiple accessories by repeating
          this field with different values.
        in: formData
        name: accessory
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created Gundam
          schema:
            $ref: '#/definitions/db.GundamDetails'
        "400":
          description: Bad Request - Invalid input data
        "403":
          description: Forbidden - User is not authorized to create Gundam for this
            user
        "404":
          description: Not Found - User with specified ID does not exist
        "500":
          description: Internal Server Error - Failed to create Gundam
      security:
      - accessToken: []
      summary: Create a new Gundam model
      tags:
      - users
  /users/:id/gundams/:gundamID:
    delete:
      description: Hard delete a Gundam model by its ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted Gundam
      security:
      - accessToken: []
      summary: Hard delete Gundam
      tags:
      - gundams
    get:
      description: Retrieves detailed information about a specific Gundam model
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved Gundam details
          schema:
            $ref: '#/definitions/db.GundamDetails'
      security:
      - accessToken: []
      summary: Get Gundam details
      tags:
      - gundams
    patch:
      consumes:
      - application/json
      description: Update the basic information of a Gundam model
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      - description: Gundam name
        in: body
        name: name
        schema:
          type: string
      - description: Gundam grade ID
        in: body
        name: grade_id
        schema:
          type: integer
      - description: Gundam series name
        in: body
        name: series
        schema:
          type: string
      - description: Total number of parts
        in: body
        name: parts_total
        schema:
          type: integer
      - description: Gundam material
        in: body
        name: material
        schema:
          type: string
      - description: Gundam version
        in: body
        name: version
        schema:
          type: string
      - description: Condition of the Gundam
        in: body
        name: condition
        schema:
          enum:
          - new
          - open box
          - used
          type: string
      - description: Additional details about condition
        in: body
        name: condition_description
        schema:
          type: string
      - description: Manufacturer name
        in: body
        name: manufacturer
        schema:
          type: string
      - description: Weight in grams
        in: body
        name: weight
        schema:
          type: integer
      - description: Gundam scale
        in: body
        name: scale
        schema:
          enum:
          - 1/144
          - 1/100
          - 1/60
          - 1/48
          type: string
      - description: Detailed description
        in: body
        name: description
        schema:
          type: string
      - description: Price in VND
        in: body
        name: price
        schema:
          type: integer
      - description: Release year
        in: body
        name: release_year
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated Gundam
          schema:
            $ref: '#/definitions/db.GundamDetails'
      security:
      - accessToken: []
      summary: Update Gundam basis info
      tags:
      - gundams
  /users/:id/gundams/:gundamID/accessories:
    put:
      consumes:
      - application/json
      description: Update the accessories of a Gundam model
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      - description: Array of Gundam accessories
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/db.GundamAccessoryDTO'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated Gundam details
          schema:
            $ref: '#/definitions/db.GundamDetails'
      security:
      - accessToken: []
      summary: Update Gundam accessories
      tags:
      - gundams
  /users/:id/gundams/:gundamID/images:
    delete:
      consumes:
      - application/json
      description: Delete a secondary image from a Gundam model
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      - description: URL of the secondary image to delete
        in: body
        name: image_url
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted secondary image
      security:
      - accessToken: []
      summary: Delete secondary image from Gundam
      tags:
      - gundams
    post:
      consumes:
      - multipart/form-data
      description: Add secondary images to a Gundam model
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      - description: Array of secondary images
        in: formData
        name: images
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added secondary images
      security:
      - accessToken: []
      summary: Add secondary images to Gundam
      tags:
      - gundams
  /users/:id/gundams/:gundamID/primary-image:
    patch:
      consumes:
      - multipart/form-data
      description: Update the primary image of a Gundam model
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      - description: New primary image of the Gundam
        in: formData
        name: primary_image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated Gundam details
          schema:
            $ref: '#/definitions/db.GundamDetails'
        "400":
          description: Bad Request - Invalid input data
        "403":
          description: Forbidden - User is not authorized to update Gundam for this
            user
        "404":
          description: Not Found - User or Gundam with specified ID does not exist
        "500":
          description: Internal Server Error - Failed to update Gundam primary image
      security:
      - accessToken: []
      summary: Update Gundam primary image
      tags:
      - gundams
  /users/:id/wallet:
    get:
      consumes:
      - application/json
      description: Get user wallet information details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User wallet information
          schema:
            $ref: '#/definitions/db.Wallet'
        "400":
          description: Bad request
        "404":
          description: User not found
        "500":
          description: Internal server error
      security:
      - accessToken: []
      summary: Get user wallet information details
      tags:
      - wallet
  /users/{id}:
    get:
      description: Get detailed information about a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            $ref: '#/definitions/db.User'
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Retrieve a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update specific user details by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Invalid request body
        "500":
          description: Internal server error
      summary: Update a user's information
      tags:
      - users
  /users/{id}/addresses:
    get:
      description: Get all addresses for a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user addresses
          schema:
            items:
              $ref: '#/definitions/db.UserAddress'
            type: array
        "500":
          description: Internal server error
      summary: Retrieve user addresses
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Add a new address for a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Address creation request
        in: body
        name: request
        schema:
          $ref: '#/definitions/api.createUserAddressRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Address created successfully
          schema:
            $ref: '#/definitions/db.UserAddress'
        "400":
          description: Invalid request body
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Create a new user address
      tags:
      - users
  /users/{id}/addresses/{address_id}:
    delete:
      description: Delete an address of a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Address ID
        in: path
        name: address_id
        required: true
        type: integer
      responses:
        "204":
          description: Address deleted successfully
        "400":
          description: Invalid request
        "404":
          description: Address not found
        "409":
          description: Cannot delete primary or pickup address
        "500":
          description: Internal server error
      summary: Delete user address
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an existing address information for a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Address ID
        in: path
        name: address_id
        required: true
        type: integer
      - description: Address information to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateUserAddressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Address updated successfully
          schema:
            $ref: '#/definitions/db.UserAddress'
      summary: Update user address
      tags:
      - users
  /users/{id}/addresses/pickup:
    get:
      description: Get the pickup address of a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user pickup address
          schema:
            $ref: '#/definitions/db.UserAddress'
        "404":
          description: Pickup address not found
        "500":
          description: Internal server error
      summary: Get user pickup address
      tags:
      - users
  /users/{id}/avatar:
    patch:
      consumes:
      - multipart/form-data
      description: Upload and update a user's profile avatar
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Avatar image file
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated avatar
          schema:
            $ref: '#/definitions/api.updateAvatarResponse'
        "400":
          description: Invalid request
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Update user avatar
      tags:
      - users
  /users/become-seller:
    post:
      consumes:
      - application/json
      description: Upgrade the user's role to seller and create the trial subscription
      produces:
      - application/json
      responses:
        "200":
          description: Successfully became seller
          schema:
            $ref: '#/definitions/db.User'
        "404":
          description: User not found
        "409":
          description: User is already a seller
        "500":
          description: Internal server error
      security:
      - accessToken: []
      summary: Become a seller
      tags:
      - users
  /users/by-phone:
    get:
      description: Get user details using a phone_number number as a query parameter
      parameters:
      - description: Phone Number
        in: query
        name: phone_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            $ref: '#/definitions/db.User'
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Retrieve a user by phone_number number
      tags:
      - users
  /users/me/auctions:
    get:
      description: Retrieves a list of auctions the user has participated in. Each
        auction includes the auction information and the user's participation information.
      produces:
      - application/json
      responses:
        "200":
          description: List of participated auctions
          schema:
            items:
              $ref: '#/definitions/db.ListUserParticipatedAuctionsRow'
            type: array
      security:
      - accessToken: []
      summary: List user participated auctions
      tags:
      - auctions
  /users/me/auctions/:auctionID/bids:
    get:
      description: Retrieves a list of bids made by the user in a participated auction.
      parameters:
      - description: Auction ID
        in: query
        name: auctionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of user bids
          schema:
            items:
              $ref: '#/definitions/db.AuctionBid'
            type: array
      security:
      - accessToken: []
      summary: List user bids
      tags:
      - auctions
  /users/me/auctions/{auctionID}/bids:
    post:
      description: User places a bid in an active auction they have participated in.
      parameters:
      - description: Auction ID
        in: path
        name: auctionID
        required: true
        type: string
      - description: Request body containing bid amount
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.placeBidRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful bid placement
      security:
      - accessToken: []
      summary: Place a bid in an auction
      tags:
      - auctions
  /users/me/auctions/{auctionID}/participate:
    post:
      description: User deposits money to participate in an active auction.
      parameters:
      - description: Auction ID
        in: path
        name: auctionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Participation result
          schema:
            $ref: '#/definitions/db.ParticipateInAuctionTxResult'
      security:
      - accessToken: []
      summary: Participate in an auction
      tags:
      - auctions
  /users/me/auctions/{auctionID}/payment:
    post:
      consumes:
      - application/json
      description: Pay the remaining amount after deposit for a winning auction.
      parameters:
      - description: Auction ID
        in: path
        name: auctionID
        required: true
        type: string
      - description: Payment request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.payAuctionWinningBidRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Payment result
          schema:
            $ref: '#/definitions/db.PayAuctionWinningBidTxResult'
      security:
      - accessToken: []
      summary: Pay for winning auction bid
      tags:
      - auctions
  /users/me/bank-accounts:
    get:
      description: Get all bank accounts for the authenticated user (for withdrawals)
      produces:
      - application/json
      responses:
        "200":
          description: List of user bank accounts
          schema:
            items:
              $ref: '#/definitions/db.UserBankAccount'
            type: array
      security:
      - accessToken: []
      summary: List user bank accounts
      tags:
      - wallet
    post:
      consumes:
      - application/json
      description: Add a new bank account for the authenticated user (for withdrawals)
      parameters:
      - description: Bank account information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.addBankAccountRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully added bank account
          schema:
            $ref: '#/definitions/db.UserBankAccount'
      security:
      - accessToken: []
      summary: Add bank account
      tags:
      - wallet
  /users/me/exchange-offers:
    get:
      description: Get a list of all exchange offers created by the authenticated
        user, including details about the exchange posts, items, and negotiation notes.
      produces:
      - application/json
      responses:
        "200":
          description: List of user's exchange offers
          schema:
            items:
              $ref: '#/definitions/db.UserExchangeOfferDetails'
            type: array
      security:
      - accessToken: []
      summary: List user's exchange offers
      tags:
      - exchanges
    post:
      consumes:
      - application/json
      description: |-
        Create a new exchange offer for trading multiple Gundams between users with optional compensation.

        **Business Rules:**
        - Không thể tạo offer cho bài đăng của chính mình
        - Mỗi user chỉ có 1 offer cho mỗi bài đăng
        - Gundam của chủ bài đăng phải có status "for exchange"
        - Gundam của người đề xuất phải có status "in store" (sẽ được chuyển thành "for exchange" sau khi tạo offer)
        - Nếu có compensation, người trả phải có đủ số dư (chỉ kiểm tra nếu người đề xuất là người trả)
        - Compensation chỉ được trừ tiền khi offer được chấp nhận, không trừ ngay
      parameters:
      - description: Create exchange offer request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createExchangeOfferRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Exchange offer created successfully
          schema:
            $ref: '#/definitions/db.CreateExchangeOfferTxResult'
      security:
      - accessToken: []
      summary: Create an exchange offer
      tags:
      - exchanges
  /users/me/exchange-offers/{offerID}:
    delete:
      description: Delete an exchange offer created by the authenticated user.
      parameters:
      - description: Exchange Offer ID
        in: path
        name: offerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted offer response
          schema:
            $ref: '#/definitions/db.ExchangeOfferInfo'
      security:
      - accessToken: []
      summary: Delete an exchange offer
      tags:
      - exchanges
    get:
      description: Retrieves detailed information about a specific exchange offer
        created by the authenticated user.
      parameters:
      - description: Exchange Offer ID
        in: path
        name: offerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.UserExchangeOfferDetails'
        "400":
          description: Invalid offer ID
          schema: {}
        "403":
          description: Unauthorized access
          schema: {}
        "404":
          description: Offer not found
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      security:
      - accessToken: []
      summary: Get user's exchange offer details
      tags:
      - exchanges
    patch:
      consumes:
      - application/json
      description: As an offerer, update exchange offer details. Only allowed when
        a negotiation is requested by the post owner.
      parameters:
      - description: Exchange Offer OfferID
        in: path
        name: offerID
        required: true
        type: string
      - description: Update offer request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateExchangeOfferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated offer response
          schema:
            $ref: '#/definitions/db.UpdateExchangeOfferTxResult'
      security:
      - accessToken: []
      summary: Update an exchange offer
      tags:
      - exchanges
  /users/me/exchange-posts:
    get:
      description: List all exchange posts created by the current authenticated user.
      parameters:
      - description: Filter by status (open, closed)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of user's exchange posts
          schema:
            items:
              $ref: '#/definitions/db.UserExchangePostDetails'
            type: array
      security:
      - accessToken: []
      summary: List user's exchange posts
      tags:
      - exchanges
    post:
      consumes:
      - multipart/form-data
      description: Create a new exchange post.
      parameters:
      - description: Create exchange post request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createExchangePostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Create exchange post response
          schema:
            $ref: '#/definitions/db.CreateExchangePostTxResult'
      security:
      - accessToken: []
      summary: Create a new exchange post
      tags:
      - exchanges
  /users/me/exchange-posts/{id}:
    delete:
      description: Deletes an exchange post and resets the status of associated gundams.
        Only the post owner can delete it.
      parameters:
      - description: Exchange Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Delete exchange post response
          schema:
            $ref: '#/definitions/db.DeleteExchangePostTxResult'
      security:
      - accessToken: []
      summary: Delete an exchange post
      tags:
      - exchanges
  /users/me/exchange-posts/{postID}:
    get:
      description: Get detailed information about a specific exchange post owned by
        the authenticated user, including items and offers.
      parameters:
      - description: Exchange Post ID
        in: path
        name: postID
        required: true
        type: string
      - description: Filter by status (open, closed)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User exchange post details
          schema:
            $ref: '#/definitions/db.UserExchangePostDetails'
        "400":
          description: Invalid post ID or status
          schema: {}
        "404":
          description: Post not found
          schema: {}
      security:
      - accessToken: []
      summary: Get user's exchange post details
      tags:
      - exchanges
  /users/me/exchange-posts/{postID}/offers/{offerID}/accept:
    patch:
      description: As a post owner, accept an exchange offer. This will create an
        exchange transaction and related orders.
      parameters:
      - description: Exchange Post ID
        in: path
        name: postID
        required: true
        type: string
      - description: Exchange Offer ID
        in: path
        name: offerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Accepted offer response
          schema:
            $ref: '#/definitions/db.AcceptExchangeOfferTxResult'
      security:
      - accessToken: []
      summary: Accept an exchange offer
      tags:
      - exchanges
  /users/me/exchange-posts/{postID}/offers/{offerID}/negotiate:
    patch:
      consumes:
      - application/json
      description: As a post owner, request negotiation with an offerer.
      parameters:
      - description: Exchange Post ID
        in: path
        name: postID
        required: true
        type: string
      - description: Exchange Offer ID
        in: path
        name: offerID
        required: true
        type: string
      - description: Negotiation request
        in: body
        name: request
        schema:
          $ref: '#/definitions/api.requestNegotiationForOfferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Negotiation request response
          schema:
            $ref: '#/definitions/db.RequestNegotiationForOfferTxResult'
      security:
      - accessToken: []
      summary: Request negotiation for an exchange offer
      tags:
      - exchanges
  /users/me/wallet/entries:
    get:
      consumes:
      - application/json
      description: List user wallet entries
      parameters:
      - description: Filter by wallet entry status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of wallet entries
          schema:
            items:
              $ref: '#/definitions/db.WalletEntry'
            type: array
      security:
      - accessToken: []
      summary: List user wallet entries
      tags:
      - wallet
  /users/me/wallet/withdrawal-requests:
    get:
      description: Retrieve all withdrawal requests for the authenticated user
      parameters:
      - description: Filter by status
        enum:
        - pending
        - approved
        - completed
        - rejected
        - canceled
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of withdrawal requests
          schema:
            items:
              $ref: '#/definitions/db.WithdrawalRequestDetails'
            type: array
      security:
      - accessToken: []
      summary: List user withdrawal requests
      tags:
      - wallet
    post:
      consumes:
      - application/json
      description: |-
        Create a new withdrawal request to transfer money from user's wallet to their bank account

        **Quy định nghiệp vụ:**
        - Người dùng phải có đủ số dư trong ví (số tiền sẽ bị trừ ngay lập tức)
        - Tài khoản ngân hàng phải thuộc về người dùng đã xác thực
        - Số tiền rút phải trong khoảng từ 50,000 VNĐ đến 5,000,000 VNĐ mỗi lần
        - Yêu cầu rút tiền được xử lý thủ công bởi moderator trong vòng 24 giờ (ngày làm việc)
        - Sau khi tạo, yêu cầu rút tiền không thể hủy bởi người dùng

        **Quy trình xử lý:**
        1. Hệ thống kiểm tra yêu cầu và số dư ví
        2. Tiền được trừ ngay lập tức khỏi ví người dùng
        3. Yêu cầu rút tiền được tạo với trạng thái "đang xử lý"
        4. ModeratorID xem xét và xử lý yêu cầu thủ công
        5. Trạng thái cập nhật thành "hoàn thành" sau khi chuyển tiền

        **Các trường hợp lỗi:**
        - 400: Dữ liệu yêu cầu không hợp lệ hoặc không đủ số dư
        - 404: Không tìm thấy tài khoản ngân hàng hoặc không thuộc về người dùng
        - 422: Vi phạm quy tắc nghiệp vụ (giới hạn số tiền, v.v.)
      parameters:
      - description: Withdrawal request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createWithdrawalRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Withdrawal request created successfully
          schema:
            $ref: '#/definitions/db.WithdrawalRequest'
      security:
      - accessToken: []
      summary: Create withdrawal request
      tags:
      - wallet
  /users/me/wallet/withdrawal-requests/{requestID}/cancel:
    patch:
      description: |-
        Cancel a pending withdrawal request and refund the amount back to user's wallet

        **Quy định nghiệp vụ:**
        - Chỉ có thể hủy những yêu cầu rút tiền đang ở trạng thái chờ xử lý
        - Chỉ người tạo yêu cầu mới có thể hủy yêu cầu của mình
        - Số tiền sẽ được hoàn trả ngay lập tức vào ví của người dùng

        **Các trường hợp lỗi:**
        - 400: ID yêu cầu không đúng định dạng
        - 403: Yêu cầu không thuộc về người dùng
        - 404: Không tìm thấy yêu cầu
        - 422: Không thể hủy yêu cầu (không ở trạng thái chờ xử lý)
      parameters:
      - description: Withdrawal request ID
        in: path
        name: requestID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.WithdrawalRequestDetails'
      security:
      - accessToken: []
      summary: Cancel withdrawal request
      tags:
      - wallet
  /wallet/zalopay/create:
    post:
      consumes:
      - application/json
      description: Create a ZaloPay order
      parameters:
      - description: Create ZaloPay order request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createZalopayOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Create ZaloPay order response
          schema:
            $ref: '#/definitions/zalopay.CreateOrderZalopayResponse'
        "400":
          description: Bad request
        "500":
          description: Internal server error
      security:
      - accessToken: []
      summary: Create a ZaloPay order
      tags:
      - wallet
schemes:
- http
- https
securityDefinitions:
  accessToken:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
