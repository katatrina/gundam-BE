basePath: /v1
definitions:
  api.GenerateEmailOTPRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  api.GenerateEmailOTPResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      expires_at:
        type: string
      otp_code:
        type: string
    required:
    - created_at
    - email
    - expires_at
    - otp_code
    type: object
  api.GeneratePhoneOTPRequest:
    properties:
      phone_number:
        description: Số điện thoại cần gửi OTP
        type: string
    required:
    - phone_number
    type: object
  api.GeneratePhoneOTPResponse:
    properties:
      created_at:
        description: Thời điểm OTP được tạo
        type: string
      expires_at:
        description: Thời điểm OTP hết hạn
        type: string
      otp_code:
        description: Mã OTP được tạo
        type: string
      phone_number:
        description: Số điện thoại đã gửi OTP
        type: string
    required:
    - created_at
    - expires_at
    - otp_code
    - phone_number
    type: object
  api.VerifyEmailOTPRequest:
    properties:
      email:
        type: string
      otp_code:
        type: string
    required:
    - email
    - otp_code
    type: object
  api.VerifyPhoneOTPRequest:
    properties:
      otp_code:
        description: Mã OTP
        type: string
      phone_number:
        description: Số điện thoại mới
        type: string
      user_id:
        description: ID của user cần cập nhật số điện thoại
        type: string
    required:
    - otp_code
    - phone_number
    - user_id
    type: object
  api.addCartItemRequest:
    properties:
      gundam_id:
        type: integer
    required:
    - gundam_id
    type: object
  api.cancelExchangeRequest:
    properties:
      reason:
        type: string
    required:
    - reason
    type: object
  api.cancelOrderRequest:
    properties:
      reason:
        type: string
    required:
    - reason
    type: object
  api.checkEmailRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  api.createExchangeOfferRequest:
    properties:
      compensation_amount:
        description: Số tiền bù (null nếu không có bù tiền)
        type: integer
      exchange_post_id:
        description: ID bài đăng trao đổi
        type: string
      note:
        description: Ghi chú người đề xuất muốn gửi cho người đăng (tùy chọn)
        type: string
      offerer_gundam_id:
        description: ID Gundam của người đề xuất
        type: integer
      payer_id:
        description: ID người bù tiền (poster_id hoặc offerer_id, hoặc null)
        type: string
      poster_gundam_id:
        description: ID Gundam của người đăng bài
        type: integer
    required:
    - compensation_amount
    - exchange_post_id
    - note
    - offerer_gundam_id
    - payer_id
    - poster_gundam_id
    type: object
  api.createExchangePostRequest:
    properties:
      content:
        description: Nội dung bài post
        type: string
      post_images:
        description: Ảnh bài post
        items:
          $ref: '#/definitions/multipart.FileHeader'
        maxItems: 5
        minItems: 1
        type: array
      post_item_id:
        description: ID của các Gundam mà chủ bài post cho phép trao đổi
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - content
    - post_images
    - post_item_id
    type: object
  api.createOrderRequest:
    properties:
      buyer_address_id:
        description: |-
          ID of the buyer's chosen address
          example: 42
        type: integer
      delivery_fee:
        description: |-
          Delivery fee (VND)
          minimum: 0
          example: 30000
        minimum: 0
        type: integer
      expected_delivery_time:
        description: |-
          Expected delivery time
          example: 2025-04-05T10:00:00Z
        type: string
      gundam_ids:
        description: |-
          List of Gundam IDs in the order
          example: [1, 2, 3]
        items:
          type: integer
        type: array
      items_subtotal:
        description: |-
          Total value of all items (excluding delivery fee)
          minimum: 0
          example: 500000
        minimum: 0
        type: integer
      note:
        description: |-
          Optional note for the order
          maxLength: 255
          example: Please deliver in the morning
        maxLength: 255
        type: string
      payment_method:
        description: |-
          Payment method (wallet: pay via platform wallet, cod: cash on delivery)
          enums: wallet,cod
          example: wallet
        enum:
        - wallet
        - cod
        type: string
      seller_id:
        description: |-
          ID of the seller
          example: user123
        type: string
      total_amount:
        description: |-
          Total order amount (including delivery fee)
          minimum: 0
          example: 530000
        minimum: 0
        type: integer
    required:
    - buyer_address_id
    - delivery_fee
    - expected_delivery_time
    - gundam_ids
    - items_subtotal
    - note
    - payment_method
    - seller_id
    - total_amount
    type: object
  api.createSellerProfileRequest:
    properties:
      shop_name:
        type: string
      user_id:
        type: string
    required:
    - shop_name
    - user_id
    type: object
  api.createUserAddressRequest:
    properties:
      detail:
        type: string
      district_name:
        type: string
      full_name:
        type: string
      ghn_district_id:
        type: integer
      ghn_ward_code:
        type: string
      is_pickup_address:
        type: boolean
      is_primary:
        type: boolean
      phone_number:
        type: string
      province_name:
        type: string
      ward_name:
        type: string
    required:
    - detail
    - district_name
    - full_name
    - ghn_district_id
    - ghn_ward_code
    - is_pickup_address
    - is_primary
    - phone_number
    - province_name
    - ward_name
    type: object
  api.createUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    required:
    - email
    - full_name
    - password
    type: object
  api.createZalopayOrderRequest:
    properties:
      amount:
        minimum: 1000
        type: integer
      description:
        maxLength: 256
        type: string
      redirect_url:
        type: string
    required:
    - amount
    - description
    - redirect_url
    type: object
  api.loginUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  api.loginUserResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      user:
        $ref: '#/definitions/db.User'
    required:
    - access_token
    - access_token_expires_at
    - user
    type: object
  api.loginUserWithGoogleRequest:
    properties:
      id_token:
        type: string
    required:
    - id_token
    type: object
  api.payExchangeDeliveryFeeRequest:
    properties:
      delivery_fee:
        minimum: 1
        type: integer
      expected_delivery_time:
        type: string
      note:
        type: string
    required:
    - delivery_fee
    - expected_delivery_time
    - note
    type: object
  api.provideExchangeDeliveryAddressesRequest:
    properties:
      from_address_id:
        description: ID địa chỉ gửi đã được lưu trong bảng user_addresses
        type: integer
      to_address_id:
        description: ID địa chỉ nhận đã được lưu trong bảng user_addresses
        type: integer
    required:
    - from_address_id
    - to_address_id
    type: object
  api.requestNegotiationForOfferRequest:
    properties:
      note:
        description: Ghi chú từ người yêu cầu thương lượng, không bắt buộc
        type: string
    required:
    - note
    type: object
  api.updateAvatarResponse:
    properties:
      avatar_url:
        type: string
    required:
    - avatar_url
    type: object
  api.updateExchangeOfferRequest:
    properties:
      compensation_amount:
        description: Bắt buộc khi require_compensation=true
        type: integer
      note:
        description: Ghi chú thương lượng, không bắt buộc
        type: string
      payer_id:
        description: ID người trả tiền bù, bắt buộc khi require_compensation=true
        type: string
      require_compensation:
        description: true = yêu cầu bù tiền, false = không yêu cầu bù tiền
        type: boolean
    required:
    - compensation_amount
    - note
    - payer_id
    - require_compensation
    type: object
  api.updateSellerProfileRequest:
    properties:
      shop_name:
        type: string
      user_id:
        type: string
    required:
    - shop_name
    - user_id
    type: object
  api.updateUserAddressRequest:
    properties:
      detail:
        type: string
      district_name:
        type: string
      full_name:
        type: string
      ghn_district_id:
        type: integer
      ghn_ward_code:
        type: string
      is_pickup_address:
        type: boolean
      is_primary:
        type: boolean
      phone_number:
        type: string
      province_name:
        type: string
      ward_name:
        type: string
    required:
    - detail
    - district_name
    - full_name
    - ghn_district_id
    - ghn_ward_code
    - is_pickup_address
    - is_primary
    - phone_number
    - province_name
    - ward_name
    type: object
  api.updateUserRequest:
    properties:
      full_name:
        type: string
    required:
    - full_name
    type: object
  api.verifyAccessTokenRequest:
    properties:
      access_token:
        type: string
    required:
    - access_token
    type: object
  db.AcceptExchangeOfferTxResult:
    properties:
      exchange:
        $ref: '#/definitions/db.Exchange'
    required:
    - exchange
    type: object
  db.AddCartItemRow:
    properties:
      cart_item_id:
        type: string
      gundam_id:
        type: integer
      gundam_image_url:
        type: string
      gundam_name:
        type: string
      gundam_price:
        type: integer
      seller_avatar_url:
        type: string
      seller_id:
        type: string
      seller_name:
        type: string
    required:
    - cart_item_id
    - gundam_id
    - gundam_image_url
    - gundam_name
    - gundam_price
    - seller_avatar_url
    - seller_id
    - seller_name
    type: object
  db.CancelExchangeTxResult:
    properties:
      exchange:
        $ref: '#/definitions/db.Exchange'
      refunded_compensation:
        type: boolean
      refunded_offerer_delivery_fee:
        type: boolean
      refunded_poster_delivery_fee:
        type: boolean
    required:
    - exchange
    - refunded_compensation
    - refunded_offerer_delivery_fee
    - refunded_poster_delivery_fee
    type: object
  db.CancelOrderByBuyerTxResult:
    properties:
      buyer_wallet:
        $ref: '#/definitions/db.Wallet'
      order:
        $ref: '#/definitions/db.Order'
      order_transaction:
        $ref: '#/definitions/db.OrderTransaction'
      refund_entry:
        $ref: '#/definitions/db.WalletEntry'
    required:
    - buyer_wallet
    - order
    - order_transaction
    - refund_entry
    type: object
  db.CancelOrderBySellerTxResult:
    properties:
      buyer_wallet:
        $ref: '#/definitions/db.Wallet'
      order:
        $ref: '#/definitions/db.Order'
      order_transaction:
        $ref: '#/definitions/db.OrderTransaction'
      refund_entry:
        $ref: '#/definitions/db.WalletEntry'
    required:
    - buyer_wallet
    - order
    - order_transaction
    - refund_entry
    type: object
  db.CompleteRegularOrderTxResult:
    properties:
      order:
        $ref: '#/definitions/db.Order'
      order_transaction:
        $ref: '#/definitions/db.OrderTransaction'
      seller_entry:
        $ref: '#/definitions/db.WalletEntry'
      seller_wallet:
        $ref: '#/definitions/db.Wallet'
    required:
    - order
    - order_transaction
    - seller_entry
    - seller_wallet
    type: object
  db.ConfirmOrderTxResult:
    properties:
      order:
        allOf:
        - $ref: '#/definitions/db.Order'
        description: Đơn hàng đã được cập nhật
      order_items:
        description: Các mặt hàng trong đơn hàng
        items:
          $ref: '#/definitions/db.OrderItem'
        type: array
      order_transaction:
        allOf:
        - $ref: '#/definitions/db.OrderTransaction'
        description: Giao dịch đơn hàng đã được cập nhật với seller_entry_id
      seller_entry:
        allOf:
        - $ref: '#/definitions/db.WalletEntry'
        description: Bút toán cộng tiền cho người bán (pending)
    required:
    - order
    - order_items
    - order_transaction
    - seller_entry
    type: object
  db.CreateExchangeOfferTxResult:
    properties:
      offer:
        $ref: '#/definitions/db.ExchangeOffer'
      offer_items:
        items:
          $ref: '#/definitions/db.ExchangeOfferItem'
        type: array
    required:
    - offer
    - offer_items
    type: object
  db.CreateExchangePostTxResult:
    properties:
      exchange_post:
        $ref: '#/definitions/db.ExchangePost'
      exchange_post_items:
        items:
          $ref: '#/definitions/db.ExchangePostItem'
        type: array
    required:
    - exchange_post
    - exchange_post_items
    type: object
  db.CreateOrderTxResult:
    properties:
      buyer_entry:
        $ref: '#/definitions/db.WalletEntry'
      order:
        $ref: '#/definitions/db.Order'
      order_delivery:
        $ref: '#/definitions/db.OrderDelivery'
      order_items:
        items:
          $ref: '#/definitions/db.OrderItem'
        type: array
      order_transaction:
        $ref: '#/definitions/db.OrderTransaction'
    required:
    - buyer_entry
    - order
    - order_delivery
    - order_items
    - order_transaction
    type: object
  db.DeleteExchangePostTxResult:
    properties:
      deleted_exchange_post:
        $ref: '#/definitions/db.ExchangePost'
      deleted_exchange_post_offers:
        items:
          $ref: '#/definitions/db.ExchangeOffer'
        type: array
    required:
    - deleted_exchange_post
    - deleted_exchange_post_offers
    type: object
  db.DeliveryInformation:
    properties:
      created_at:
        type: string
      detail:
        type: string
      district_name:
        type: string
      full_name:
        type: string
      ghn_district_id:
        type: integer
      ghn_ward_code:
        type: string
      id:
        type: integer
      phone_number:
        type: string
      province_name:
        type: string
      user_id:
        type: string
      ward_name:
        type: string
    required:
    - created_at
    - detail
    - district_name
    - full_name
    - ghn_district_id
    - ghn_ward_code
    - id
    - phone_number
    - province_name
    - user_id
    - ward_name
    type: object
  db.DeliveryOverralStatus:
    enum:
    - picking
    - delivering
    - delivered
    - failed
    - return
    type: string
    x-enum-varnames:
    - DeliveryOverralStatusPicking
    - DeliveryOverralStatusDelivering
    - DeliveryOverralStatusDelivered
    - DeliveryOverralStatusFailed
    - DeliveryOverralStatusReturn
  db.Exchange:
    properties:
      canceled_by:
        type: string
      canceled_reason:
        type: string
      compensation_amount:
        type: integer
      completed_at:
        type: string
      created_at:
        type: string
      id:
        type: string
      offerer_delivery_fee:
        type: integer
      offerer_delivery_fee_paid:
        type: boolean
      offerer_from_delivery_id:
        type: integer
      offerer_id:
        type: string
      offerer_order_expected_delivery_time:
        type: string
      offerer_order_id:
        type: string
      offerer_order_note:
        type: string
      offerer_to_delivery_id:
        type: integer
      payer_id:
        type: string
      poster_delivery_fee:
        type: integer
      poster_delivery_fee_paid:
        type: boolean
      poster_from_delivery_id:
        type: integer
      poster_id:
        type: string
      poster_order_expected_delivery_time:
        type: string
      poster_order_id:
        type: string
      poster_order_note:
        type: string
      poster_to_delivery_id:
        type: integer
      status:
        $ref: '#/definitions/db.ExchangeStatus'
      updated_at:
        type: string
    required:
    - canceled_by
    - canceled_reason
    - compensation_amount
    - completed_at
    - created_at
    - id
    - offerer_delivery_fee
    - offerer_delivery_fee_paid
    - offerer_from_delivery_id
    - offerer_id
    - offerer_order_expected_delivery_time
    - offerer_order_id
    - offerer_order_note
    - offerer_to_delivery_id
    - payer_id
    - poster_delivery_fee
    - poster_delivery_fee_paid
    - poster_from_delivery_id
    - poster_id
    - poster_order_expected_delivery_time
    - poster_order_id
    - poster_order_note
    - poster_to_delivery_id
    - status
    - updated_at
    type: object
  db.ExchangeItem:
    properties:
      created_at:
        type: string
      exchange_id:
        type: string
      grade:
        type: string
      gundam_id:
        type: integer
      id:
        type: string
      image_url:
        type: string
      is_from_poster:
        type: boolean
      name:
        type: string
      owner_id:
        type: string
      quantity:
        type: integer
      scale:
        type: string
      slug:
        type: string
      weight:
        type: integer
    required:
    - created_at
    - exchange_id
    - grade
    - gundam_id
    - id
    - image_url
    - is_from_poster
    - name
    - owner_id
    - quantity
    - scale
    - slug
    - weight
    type: object
  db.ExchangeOffer:
    properties:
      compensation_amount:
        type: integer
      created_at:
        type: string
      id:
        type: string
      last_negotiation_at:
        type: string
      max_negotiations:
        type: integer
      negotiation_requested:
        type: boolean
      negotiations_count:
        type: integer
      note:
        type: string
      offerer_id:
        type: string
      payer_id:
        type: string
      post_id:
        type: string
      updated_at:
        type: string
    required:
    - compensation_amount
    - created_at
    - id
    - last_negotiation_at
    - max_negotiations
    - negotiation_requested
    - negotiations_count
    - note
    - offerer_id
    - payer_id
    - post_id
    - updated_at
    type: object
  db.ExchangeOfferInfo:
    properties:
      compensation_amount:
        description: Số tiền bù
        type: integer
      created_at:
        description: Thời gian tạo đề xuất
        type: string
      id:
        description: ID đề xuất
        type: string
      last_negotiation_at:
        description: Thời gian thương lượng gần nhất
        type: string
      max_negotiations:
        description: Số lần thương lượng tối đa
        type: integer
      negotiation_notes:
        description: Các ghi chú/tin nhắn thương lượng
        items:
          $ref: '#/definitions/db.ExchangeOfferNote'
        type: array
      negotiation_requested:
        description: Đã yêu cầu thương lượng chưa
        type: boolean
      negotiations_count:
        description: Số lần đã thương lượng
        type: integer
      note:
        description: Ghi chú của đề xuất
        type: string
      offerer:
        allOf:
        - $ref: '#/definitions/db.User'
        description: Thông tin người đề xuất
      offerer_exchange_items:
        description: Danh sách Gundam của người đề xuất
        items:
          $ref: '#/definitions/db.GundamDetails'
        type: array
      payer_id:
        description: ID người bù tiền
        type: string
      post_id:
        description: ID bài đăng trao đổi
        type: string
      poster_exchange_items:
        description: Danh sách Gundam của người đăng bài mà người đề xuất muốn trao
          đổi
        items:
          $ref: '#/definitions/db.GundamDetails'
        type: array
      updated_at:
        description: Thời gian cập nhật đề xuất gần nhất
        type: string
    required:
    - compensation_amount
    - created_at
    - id
    - last_negotiation_at
    - max_negotiations
    - negotiation_notes
    - negotiation_requested
    - negotiations_count
    - note
    - offerer
    - offerer_exchange_items
    - payer_id
    - post_id
    - poster_exchange_items
    - updated_at
    type: object
  db.ExchangeOfferItem:
    properties:
      created_at:
        type: string
      gundam_id:
        type: integer
      id:
        type: string
      is_from_poster:
        type: boolean
      offer_id:
        type: string
    required:
    - created_at
    - gundam_id
    - id
    - is_from_poster
    - offer_id
    type: object
  db.ExchangeOfferNote:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      offer_id:
        type: string
      user_id:
        type: string
    required:
    - content
    - created_at
    - id
    - offer_id
    - user_id
    type: object
  db.ExchangePost:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      post_image_urls:
        items:
          type: string
        type: array
      status:
        $ref: '#/definitions/db.ExchangePostStatus'
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - content
    - created_at
    - id
    - post_image_urls
    - status
    - updated_at
    - user_id
    type: object
  db.ExchangePostItem:
    properties:
      created_at:
        type: string
      gundam_id:
        type: integer
      id:
        type: string
      post_id:
        type: string
    required:
    - created_at
    - gundam_id
    - id
    - post_id
    type: object
  db.ExchangePostStatus:
    enum:
    - open
    - closed
    type: string
    x-enum-varnames:
    - ExchangePostStatusOpen
    - ExchangePostStatusClosed
  db.ExchangeStatus:
    enum:
    - pending
    - packaging
    - delivering
    - delivered
    - completed
    - canceled
    - failed
    type: string
    x-enum-varnames:
    - ExchangeStatusPending
    - ExchangeStatusPackaging
    - ExchangeStatusDelivering
    - ExchangeStatusDelivered
    - ExchangeStatusCompleted
    - ExchangeStatusCanceled
    - ExchangeStatusFailed
  db.ExchangeUserInfo:
    properties:
      avatar_url:
        description: URL ảnh đại diện người dùng
        type: string
      delivery_fee:
        description: Phí vận chuyển
        type: integer
      delivery_fee_paid:
        description: Đã thanh toán phí vận chuyển chưa
        type: boolean
      expected_delivery_time:
        description: Thời gian giao hàng dự kiến
        type: string
      from_address:
        allOf:
        - $ref: '#/definitions/db.DeliveryInformation'
        description: Địa chỉ gửi hàng
      full_name:
        description: Tên người dùng
        type: string
      id:
        description: Thông tin cơ bản
        type: string
      items:
        description: Danh sách Gundam
        items:
          $ref: '#/definitions/db.ExchangeItem'
        type: array
      note:
        description: Ghi chú của người dùng
        type: string
      order:
        allOf:
        - $ref: '#/definitions/db.Order'
        description: Thông tin đơn hàng và vận chuyển
      to_address:
        allOf:
        - $ref: '#/definitions/db.DeliveryInformation'
        description: Địa chỉ nhận hàng
    required:
    - avatar_url
    - delivery_fee
    - delivery_fee_paid
    - expected_delivery_time
    - from_address
    - full_name
    - id
    - items
    - note
    - order
    - to_address
    type: object
  db.GundamAccessoryDTO:
    properties:
      name:
        type: string
      quantity:
        type: integer
    required:
    - name
    - quantity
    type: object
  db.GundamDetails:
    properties:
      accessories:
        items:
          $ref: '#/definitions/db.GundamAccessoryDTO'
        type: array
      condition:
        type: string
      condition_description:
        type: string
      created_at:
        type: string
      description:
        type: string
      grade:
        type: string
      gundam_id:
        type: integer
      manufacturer:
        type: string
      material:
        type: string
      name:
        type: string
      owner_id:
        type: string
      parts_total:
        type: integer
      price:
        type: integer
      primary_image_url:
        type: string
      quantity:
        type: integer
      release_year:
        type: integer
      scale:
        type: string
      secondary_image_urls:
        items:
          type: string
        type: array
      series:
        type: string
      slug:
        type: string
      status:
        type: string
      updated_at:
        type: string
      version:
        type: string
      weight:
        type: integer
    required:
    - accessories
    - condition
    - condition_description
    - created_at
    - description
    - grade
    - gundam_id
    - manufacturer
    - material
    - name
    - owner_id
    - parts_total
    - price
    - primary_image_url
    - quantity
    - release_year
    - scale
    - secondary_image_urls
    - series
    - slug
    - status
    - updated_at
    - version
    - weight
    type: object
  db.GundamGrade:
    properties:
      created_at:
        type: string
      display_name:
        type: string
      id:
        type: integer
      name:
        type: string
      slug:
        type: string
    required:
    - created_at
    - display_name
    - id
    - name
    - slug
    type: object
  db.ListCartItemsWithDetailsRow:
    properties:
      cart_item_id:
        type: string
      gundam_id:
        type: integer
      gundam_image_url:
        type: string
      gundam_name:
        type: string
      gundam_price:
        type: integer
      seller_avatar_url:
        type: string
      seller_id:
        type: string
      seller_name:
        type: string
    required:
    - cart_item_id
    - gundam_id
    - gundam_image_url
    - gundam_name
    - gundam_price
    - seller_avatar_url
    - seller_id
    - seller_name
    type: object
  db.MemberOrderDetails:
    properties:
      buyer_info:
        allOf:
        - $ref: '#/definitions/db.User'
        description: Thông tin người nhận (null nếu là người nhận)
      order:
        allOf:
        - $ref: '#/definitions/db.Order'
        description: Thông tin đơn hàng
      order_delivery:
        allOf:
        - $ref: '#/definitions/db.OrderDelivery'
        description: Thông tin vận chuyển
      order_items:
        description: Danh sách sản phẩm trong đơn hàng
        items:
          $ref: '#/definitions/db.OrderItem'
        type: array
      order_transaction:
        allOf:
        - $ref: '#/definitions/db.OrderTransaction'
        description: Thông tin giao dịch thanh toán của đơn hàng
      seller_info:
        allOf:
        - $ref: '#/definitions/db.SellerInfo'
        description: Thông tin người gửi (null nếu là người gửi)
      to_delivery_information:
        allOf:
        - $ref: '#/definitions/db.DeliveryInformation'
        description: Địa chỉ nhận hàng của người mua
    required:
    - buyer_info
    - order
    - order_delivery
    - order_items
    - order_transaction
    - seller_info
    - to_delivery_information
    type: object
  db.MemberOrderInfo:
    properties:
      order:
        $ref: '#/definitions/db.Order'
      order_items:
        items:
          $ref: '#/definitions/db.OrderItem'
        type: array
    required:
    - order
    - order_items
    type: object
  db.NullDeliveryOverralStatus:
    properties:
      delivery_overral_status:
        $ref: '#/definitions/db.DeliveryOverralStatus'
      valid:
        description: Valid is true if DeliveryOverralStatus is not NULL
        type: boolean
    required:
    - delivery_overral_status
    - valid
    type: object
  db.OpenExchangePostInfo:
    properties:
      exchange_post:
        allOf:
        - $ref: '#/definitions/db.ExchangePost'
        description: Thông tin bài đăng
      exchange_post_items:
        description: Danh sách Gundam mà Người đăng bài cho phép trao đổi
        items:
          $ref: '#/definitions/db.GundamDetails'
        type: array
      offer_count:
        description: Số lượng offer của bài đăng
        type: integer
      poster:
        allOf:
        - $ref: '#/definitions/db.User'
        description: Thông tin Người đăng bài
    required:
    - exchange_post
    - exchange_post_items
    - offer_count
    - poster
    type: object
  db.Order:
    properties:
      buyer_id:
        type: string
      canceled_by:
        type: string
      canceled_reason:
        type: string
      code:
        type: string
      completed_at:
        type: string
      created_at:
        type: string
      delivery_fee:
        type: integer
      id:
        type: string
      is_packaged:
        type: boolean
      items_subtotal:
        type: integer
      note:
        type: string
      packaging_image_urls:
        items:
          type: string
        type: array
      payment_method:
        $ref: '#/definitions/db.PaymentMethod'
      seller_id:
        type: string
      status:
        $ref: '#/definitions/db.OrderStatus'
      total_amount:
        type: integer
      type:
        $ref: '#/definitions/db.OrderType'
      updated_at:
        type: string
    required:
    - buyer_id
    - canceled_by
    - canceled_reason
    - code
    - completed_at
    - created_at
    - delivery_fee
    - id
    - is_packaged
    - items_subtotal
    - note
    - packaging_image_urls
    - payment_method
    - seller_id
    - status
    - total_amount
    - type
    - updated_at
    type: object
  db.OrderDelivery:
    properties:
      created_at:
        type: string
      delivery_tracking_code:
        type: string
      expected_delivery_time:
        type: string
      from_delivery_id:
        type: integer
      id:
        type: integer
      order_id:
        type: string
      overall_status:
        $ref: '#/definitions/db.NullDeliveryOverralStatus'
      status:
        type: string
      to_delivery_id:
        type: integer
      updated_at:
        type: string
    required:
    - created_at
    - delivery_tracking_code
    - expected_delivery_time
    - from_delivery_id
    - id
    - order_id
    - overall_status
    - status
    - to_delivery_id
    - updated_at
    type: object
  db.OrderItem:
    properties:
      created_at:
        type: string
      grade:
        type: string
      gundam_id:
        type: integer
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      order_id:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      scale:
        type: string
      slug:
        type: string
      weight:
        type: integer
    required:
    - created_at
    - grade
    - gundam_id
    - id
    - image_url
    - name
    - order_id
    - price
    - quantity
    - scale
    - slug
    - weight
    type: object
  db.OrderStatus:
    enum:
    - pending
    - packaging
    - delivering
    - delivered
    - completed
    - failed
    - canceled
    type: string
    x-enum-varnames:
    - OrderStatusPending
    - OrderStatusPackaging
    - OrderStatusDelivering
    - OrderStatusDelivered
    - OrderStatusCompleted
    - OrderStatusFailed
    - OrderStatusCanceled
  db.OrderTransaction:
    properties:
      amount:
        type: integer
      buyer_entry_id:
        type: integer
      completed_at:
        type: string
      created_at:
        type: string
      id:
        type: integer
      order_id:
        type: string
      seller_entry_id:
        type: integer
      status:
        $ref: '#/definitions/db.OrderTransactionStatus'
      updated_at:
        type: string
    required:
    - amount
    - buyer_entry_id
    - completed_at
    - created_at
    - id
    - order_id
    - seller_entry_id
    - status
    - updated_at
    type: object
  db.OrderTransactionStatus:
    enum:
    - pending
    - completed
    - refunded
    - failed
    type: string
    x-enum-varnames:
    - OrderTransactionStatusPending
    - OrderTransactionStatusCompleted
    - OrderTransactionStatusRefunded
    - OrderTransactionStatusFailed
  db.OrderType:
    enum:
    - regular
    - exchange
    - auction
    type: string
    x-enum-varnames:
    - OrderTypeRegular
    - OrderTypeExchange
    - OrderTypeAuction
  db.PackageOrderTxResult:
    properties:
      order:
        $ref: '#/definitions/db.Order'
      order_delivery:
        $ref: '#/definitions/db.OrderDelivery'
    required:
    - order
    - order_delivery
    type: object
  db.PayExchangeDeliveryFeeTxResult:
    properties:
      both_parties_paid:
        type: boolean
      exchange:
        $ref: '#/definitions/db.Exchange'
      offerer_order:
        $ref: '#/definitions/db.Order'
      partner_has_paid:
        type: boolean
      poster_order:
        $ref: '#/definitions/db.Order'
    required:
    - both_parties_paid
    - exchange
    - offerer_order
    - partner_has_paid
    - poster_order
    type: object
  db.PaymentMethod:
    enum:
    - cod
    - wallet
    type: string
    x-enum-varnames:
    - PaymentMethodCod
    - PaymentMethodWallet
  db.ProvideDeliveryAddressesForExchangeTxResult:
    properties:
      exchange:
        $ref: '#/definitions/db.Exchange'
    required:
    - exchange
    type: object
  db.RequestNegotiationForOfferTxResult:
    properties:
      note:
        allOf:
        - $ref: '#/definitions/db.ExchangeOfferNote'
        description: Có thể là nil nếu không có ghi chú
      offer:
        $ref: '#/definitions/db.ExchangeOffer'
    required:
    - note
    - offer
    type: object
  db.SalesOrderDetails:
    properties:
      buyer_info:
        allOf:
        - $ref: '#/definitions/db.User'
        description: Thông tin người mua
      order:
        allOf:
        - $ref: '#/definitions/db.Order'
        description: Thông tin đơn hàng
      order_delivery:
        allOf:
        - $ref: '#/definitions/db.OrderDelivery'
        description: Thông tin vận chuyển
      order_items:
        description: Danh sách sản phẩm trong đơn hàng
        items:
          $ref: '#/definitions/db.OrderItem'
        type: array
      order_transaction:
        allOf:
        - $ref: '#/definitions/db.OrderTransaction'
        description: Thông tin giao dịch thanh toán của đơn hàng
      to_delivery_information:
        allOf:
        - $ref: '#/definitions/db.DeliveryInformation'
        description: Địa chỉ nhận hàng của người mua
    required:
    - buyer_info
    - order
    - order_delivery
    - order_items
    - order_transaction
    - to_delivery_information
    type: object
  db.SalesOrderInfo:
    properties:
      order:
        $ref: '#/definitions/db.Order'
      order_items:
        items:
          $ref: '#/definitions/db.OrderItem'
        type: array
    required:
    - order
    - order_items
    type: object
  db.SellerInfo:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      google_account_id:
        type: string
      id:
        type: string
      phone_number:
        type: string
      role:
        type: string
      shop_name:
        type: string
      user_full_name:
        type: string
    required:
    - avatar_url
    - email
    - google_account_id
    - id
    - phone_number
    - role
    - shop_name
    - user_full_name
    type: object
  db.SellerProfile:
    properties:
      created_at:
        type: string
      seller_id:
        type: string
      shop_name:
        type: string
      updated_at:
        type: string
    required:
    - created_at
    - seller_id
    - shop_name
    - updated_at
    type: object
  db.UpdateExchangeOfferTxResult:
    properties:
      note:
        allOf:
        - $ref: '#/definitions/db.ExchangeOfferNote'
        description: Có thể là nil nếu không có ghi chú
      offer:
        $ref: '#/definitions/db.ExchangeOffer'
    required:
    - note
    - offer
    type: object
  db.User:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      email_verified:
        type: boolean
      full_name:
        type: string
      google_account_id:
        type: string
      id:
        type: string
      phone_number:
        type: string
      phone_number_verified:
        type: boolean
      role:
        $ref: '#/definitions/db.UserRole'
      updated_at:
        type: string
    required:
    - avatar_url
    - created_at
    - deleted_at
    - email
    - email_verified
    - full_name
    - google_account_id
    - id
    - phone_number
    - phone_number_verified
    - role
    - updated_at
    type: object
  db.UserAddress:
    properties:
      created_at:
        type: string
      detail:
        type: string
      district_name:
        type: string
      full_name:
        type: string
      ghn_district_id:
        type: integer
      ghn_ward_code:
        type: string
      id:
        type: integer
      is_pickup_address:
        type: boolean
      is_primary:
        type: boolean
      phone_number:
        type: string
      province_name:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      ward_name:
        type: string
    required:
    - created_at
    - detail
    - district_name
    - full_name
    - ghn_district_id
    - ghn_ward_code
    - id
    - is_pickup_address
    - is_primary
    - phone_number
    - province_name
    - updated_at
    - user_id
    - ward_name
    type: object
  db.UserExchangeDetails:
    properties:
      canceled_by:
        description: Thông tin hủy (nếu có)
        type: string
      canceled_reason:
        description: Lý do hủy
        type: string
      compensation_amount:
        description: Số tiền bù (nếu có)
        type: integer
      completed_at:
        description: Thời gian hoàn thành
        type: string
      created_at:
        description: Thời gian tạo
        type: string
      current_user:
        allOf:
        - $ref: '#/definitions/db.ExchangeUserInfo'
        description: Thông tin về người tham gia
      id:
        description: ID của bài đăng trao đổi
        type: string
      offerer_id:
        description: ID người đề xuất
        type: string
      partner:
        allOf:
        - $ref: '#/definitions/db.ExchangeUserInfo'
        description: Thông tin người còn lại
      payer_id:
        description: Thông tin bù tiền
        type: string
      poster_id:
        description: Thông tin gốc về cuộc trao đổi (Ai đăng, ai đề xuất)
        type: string
      status:
        description: Thông tin cơ bản về cuộc trao đổi
        type: string
      updated_at:
        description: Thời gian cập nhật
        type: string
    required:
    - canceled_by
    - canceled_reason
    - compensation_amount
    - completed_at
    - created_at
    - current_user
    - id
    - offerer_id
    - partner
    - payer_id
    - poster_id
    - status
    - updated_at
    type: object
  db.UserExchangeOfferDetails:
    properties:
      exchange_post:
        allOf:
        - $ref: '#/definitions/db.ExchangePost'
        description: Thông tin bài đăng
      exchange_post_items:
        description: Danh sách Gundam mà Người đăng bài cho phép trao đổi
        items:
          $ref: '#/definitions/db.GundamDetails'
        type: array
      offer:
        allOf:
        - $ref: '#/definitions/db.ExchangeOfferInfo'
        description: Chi tiết đề xuất
      poster:
        allOf:
        - $ref: '#/definitions/db.User'
        description: Thông tin Người đăng bài
    required:
    - exchange_post
    - exchange_post_items
    - offer
    - poster
    type: object
  db.UserExchangePostDetails:
    properties:
      exchange_post:
        allOf:
        - $ref: '#/definitions/db.ExchangePost'
        description: Thông tin bài đăng
      exchange_post_items:
        description: Danh sách Gundam mà Người đăng bài cho phép trao đổi
        items:
          $ref: '#/definitions/db.GundamDetails'
        type: array
      offer_count:
        description: Số lượng offer của bài đăng
        type: integer
      offers:
        description: Danh sách các offer của bài đăng
        items:
          $ref: '#/definitions/db.ExchangeOfferInfo'
        type: array
    required:
    - exchange_post
    - exchange_post_items
    - offer_count
    - offers
    type: object
  db.UserRole:
    enum:
    - member
    - seller
    - moderator
    - admin
    type: string
    x-enum-varnames:
    - UserRoleMember
    - UserRoleSeller
    - UserRoleModerator
    - UserRoleAdmin
  db.Wallet:
    properties:
      balance:
        type: integer
      created_at:
        type: string
      currency:
        type: string
      non_withdrawable_amount:
        type: integer
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - balance
    - created_at
    - currency
    - non_withdrawable_amount
    - updated_at
    - user_id
    type: object
  db.WalletEntry:
    properties:
      amount:
        type: integer
      completed_at:
        type: string
      created_at:
        type: string
      entry_type:
        $ref: '#/definitions/db.WalletEntryType'
      id:
        type: integer
      reference_id:
        type: string
      reference_type:
        $ref: '#/definitions/db.WalletReferenceType'
      status:
        $ref: '#/definitions/db.WalletEntryStatus'
      updated_at:
        type: string
      wallet_id:
        type: string
    required:
    - amount
    - completed_at
    - created_at
    - entry_type
    - id
    - reference_id
    - reference_type
    - status
    - updated_at
    - wallet_id
    type: object
  db.WalletEntryStatus:
    enum:
    - pending
    - completed
    - canceled
    - failed
    type: string
    x-enum-varnames:
    - WalletEntryStatusPending
    - WalletEntryStatusCompleted
    - WalletEntryStatusCanceled
    - WalletEntryStatusFailed
  db.WalletEntryType:
    enum:
    - deposit
    - withdrawal
    - payment
    - payment received
    - non_withdrawable
    - refund
    - refund deduction
    - auction lock
    - auction release
    - auction payment
    - platform fee
    type: string
    x-enum-varnames:
    - WalletEntryTypeDeposit
    - WalletEntryTypeWithdrawal
    - WalletEntryTypePayment
    - WalletEntryTypePaymentreceived
    - WalletEntryTypeNonWithdrawable
    - WalletEntryTypeRefund
    - WalletEntryTypeRefunddeduction
    - WalletEntryTypeAuctionlock
    - WalletEntryTypeAuctionrelease
    - WalletEntryTypeAuctionpayment
    - WalletEntryTypePlatformfee
  db.WalletReferenceType:
    enum:
    - order
    - auction
    - withdrawal request
    - deposit request
    - zalopay
    - exchange
    type: string
    x-enum-varnames:
    - WalletReferenceTypeOrder
    - WalletReferenceTypeAuction
    - WalletReferenceTypeWithdrawalrequest
    - WalletReferenceTypeDepositrequest
    - WalletReferenceTypeZalopay
    - WalletReferenceTypeExchange
  multipart.FileHeader:
    properties:
      filename:
        type: string
      header:
        $ref: '#/definitions/textproto.MIMEHeader'
      size:
        type: integer
    type: object
  textproto.MIMEHeader:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
  zalopay.CreateOrderZalopayResponse:
    properties:
      order_token:
        type: string
      order_url:
        type: string
      qr_code:
        type: string
      return_code:
        type: integer
      return_message:
        type: string
      sub_return_code:
        type: integer
      sub_return_message:
        type: string
      zp_trans_token:
        type: string
    required:
    - order_token
    - order_url
    - qr_code
    - return_code
    - return_message
    - sub_return_code
    - sub_return_message
    - zp_trans_token
    type: object
host: localhost:8080
info:
  contact: {}
  description: API documentation for Gundam Platform application
  title: Gundam Platform API
  version: 1.0.0
paths:
  /auth/google-login:
    post:
      consumes:
      - application/json
      description: Authenticate a user using Google ID token. If the user doesn't
        exist, a new user will be created.
      parameters:
      - description: Google ID Token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.loginUserWithGoogleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            $ref: '#/definitions/api.loginUserResponse'
        "400":
          description: Invalid request body
        "401":
          description: Invalid Google ID token
        "500":
          description: Internal server error
      summary: Login or register a user with Google account
      tags:
      - authentication
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return access token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.loginUserResponse'
        "400":
          description: Invalid request parameters
        "401":
          description: Incorrect password
        "404":
          description: Email not found
        "500":
          description: Internal server error
      summary: Login user
      tags:
      - authentication
  /cart/items:
    get:
      description: Retrieves all items in the user's shopping cart with detailed information
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved cart items
          schema:
            items:
              $ref: '#/definitions/db.ListCartItemsWithDetailsRow'
            type: array
      security:
      - accessToken: []
      summary: List Cart Items
      tags:
      - cart
    post:
      consumes:
      - application/json
      description: Adds a Gundam model to the user's shopping cart
      parameters:
      - description: Gundam to add to cart
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.addCartItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added item to cart
          schema:
            $ref: '#/definitions/db.AddCartItemRow'
      security:
      - accessToken: []
      summary: Add Item to Cart
      tags:
      - cart
  /cart/items/{id}:
    delete:
      description: Removes a specific item from the user's shopping cart
      parameters:
      - description: Cart Item ID to delete
        example: "1"
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Successfully deleted cart item
      security:
      - accessToken: []
      summary: Delete Cart Item
      tags:
      - cart
  /check-email:
    post:
      consumes:
      - application/json
      description: Checks if an email already exists in the database
      parameters:
      - description: Check email request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.checkEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Check Email Exists
      tags:
      - authentication
  /exchange-posts:
    get:
      description: List all open exchange posts.
      produces:
      - application/json
      responses:
        "200":
          description: List of open exchange posts
          schema:
            items:
              $ref: '#/definitions/db.OpenExchangePostInfo'
            type: array
      summary: List all open exchange posts
      tags:
      - exchanges
  /exchanges:
    get:
      description: Retrieves a list of all exchanges that the authenticated user is
        participating in.
      parameters:
      - description: Filter by status (pending, packaging, delivering, delivered,
          completed, canceled, failed)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of user's exchanges
          schema:
            items:
              $ref: '#/definitions/db.UserExchangeDetails'
            type: array
      security:
      - accessToken: []
      summary: List user's exchanges
      tags:
      - exchanges
  /exchanges/{exchangeID}:
    get:
      description: Retrieves detailed information about a specific exchange.
      parameters:
      - description: Exchange ID
        in: path
        name: exchangeID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Exchange details
          schema:
            $ref: '#/definitions/db.UserExchangeDetails'
      security:
      - accessToken: []
      summary: Get exchange details
      tags:
      - exchanges
  /exchanges/{exchangeID}/cancel:
    patch:
      consumes:
      - application/json
      description: Cancel an exchange transaction that is in pending or packaging
        status
      parameters:
      - description: Exchange ID
        example: 123e4567-e89b-12d3-a456-426614174000
        in: path
        name: exchangeID
        required: true
        type: string
      - description: Cancel exchange request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.cancelExchangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Exchange canceled successfully
          schema:
            $ref: '#/definitions/db.CancelExchangeTxResult'
      security:
      - accessToken: []
      summary: Cancel an exchange
      tags:
      - exchanges
  /exchanges/{exchangeID}/delivery-addresses:
    put:
      consumes:
      - application/json
      description: Provides shipping addresses (from and to) for an exchange transaction.
        Both participants must provide their addresses before proceeding.
      parameters:
      - description: Exchange ID
        in: path
        name: exchangeID
        required: true
        type: string
      - description: Delivery addresses information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.provideExchangeDeliveryAddressesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.ProvideDeliveryAddressesForExchangeTxResult'
      security:
      - accessToken: []
      summary: Provide delivery addresses for exchange
      tags:
      - exchanges
  /exchanges/{exchangeID}/pay-delivery-fee:
    post:
      consumes:
      - application/json
      description: Pays the delivery fee for an exchange transaction. When both parties
        have paid, the system creates two orders.
      parameters:
      - description: Exchange ID
        in: path
        name: exchangeID
        required: true
        type: string
      - description: Delivery fee information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.payExchangeDeliveryFeeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.PayExchangeDeliveryFeeTxResult'
      security:
      - accessToken: []
      summary: Pay delivery fee for exchange
      tags:
      - exchanges
  /grades:
    get:
      description: Retrieves a list of all available Gundam model grades
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of Gundam grades
          schema:
            items:
              $ref: '#/definitions/db.GundamGrade'
            type: array
        "500":
          description: Internal Server Error - Failed to retrieve Gundam grades
      summary: List Gundam Grades
      tags:
      - gundams
  /gundams:
    get:
      description: Retrieves a list of selling Gundams, optionally filtered by grade
      parameters:
      - description: Filter by Gundam name
        example: YR-04 Fire Lord
        in: query
        name: name
        type: string
      - description: Filter by Gundam grade slug
        example: master-grade
        in: query
        name: grade
        type: string
      - description: Filter by Gundam status
        enum:
        - in store
        - published
        - processing
        - pending auction approval
        - auctioning
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of Gundams
          schema:
            items:
              $ref: '#/definitions/db.GundamDetails'
            type: array
        "400":
          description: Bad Request - Invalid query parameters
        "500":
          description: Internal Server Error - Failed to retrieve Gundams
      summary: List Gundams
      tags:
      - gundams
  /gundams/{slug}:
    get:
      description: Retrieves a specific Gundam model by its unique slug
      parameters:
      - description: Gundam model slug
        example: rx-78-2-gundam
        in: path
        name: slug
        required: true
        type: string
      - description: Filter by Gundam status
        enum:
        - in store
        - published
        - processing
        - pending auction approval
        - auctioning
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved Gundam details
          schema:
            $ref: '#/definitions/db.GundamDetails'
        "404":
          description: Not Found - Gundam with specified slug does not exist
        "500":
          description: Internal Server Error - Failed to retrieve Gundam
      summary: Get Gundam by Slug
      tags:
      - gundams
  /orders:
    get:
      consumes:
      - application/json
      description: List all orders of a member with optional filtering by order status
      parameters:
      - description: Filter by order status
        enum:
        - pending
        - packaging
        - delivering
        - delivered
        - completed
        - canceled
        - failed
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of orders
          schema:
            items:
              $ref: '#/definitions/db.MemberOrderInfo'
            type: array
      security:
      - accessToken: []
      summary: List all orders of a member
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create a new order for purchasing Gundam models
      parameters:
      - description: Order details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Order created successfully
          schema:
            $ref: '#/definitions/db.CreateOrderTxResult'
      security:
      - accessToken: []
      summary: Create a new order
      tags:
      - orders
  /orders/{orderID}:
    get:
      consumes:
      - application/json
      description: Get details of a specific order for a member
      parameters:
      - description: Order ID
        example: 123e4567-e89b-12d3-a456-426614174000
        in: path
        name: orderID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order details
          schema:
            $ref: '#/definitions/db.MemberOrderDetails'
      security:
      - accessToken: []
      summary: Get order details for a member
      tags:
      - orders
  /orders/{orderID}/cancel:
    patch:
      consumes:
      - application/json
      description: Allows the buyer to cancel a regular order that is only in pending.
      parameters:
      - description: Order ID
        example: 123e4567-e89b-12d3-a456-426614174000
        in: path
        name: orderID
        required: true
        type: string
      - description: Cancel order request
        in: body
        name: request
        schema:
          $ref: '#/definitions/api.cancelOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Order canceled successfully
          schema:
            $ref: '#/definitions/db.CancelOrderByBuyerTxResult'
      security:
      - accessToken: []
      summary: Cancel order by buyer
      tags:
      - orders
  /orders/{orderID}/complete:
    patch:
      description: Confirm that the buyer has received the order. For regular orders,
        it completes the transaction and transfers payment to seller. For exchange
        orders, it updates exchange status and may complete the exchange if both parties
        have confirmed.
      parameters:
      - description: Order ID
        example: 123e4567-e89b-12d3-a456-426614174000
        in: path
        name: orderID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order completed successfully
          schema:
            $ref: '#/definitions/db.CompleteRegularOrderTxResult'
      security:
      - accessToken: []
      summary: Confirm order received
      tags:
      - orders
  /orders/{orderID}/package:
    patch:
      consumes:
      - multipart/form-data
      description: |-
        Upload package images, create a delivery order, and update order status for a specified order.
        Handles packaging for regular orders, exchange orders, and auction orders (future).
      parameters:
      - description: Order ID in UUID format
        in: path
        name: orderID
        required: true
        type: string
      - description: Package images (at least one image required)
        in: formData
        name: package_images
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully packaged order with delivery details
          schema:
            $ref: '#/definitions/db.PackageOrderTxResult'
      security:
      - accessToken: []
      summary: Package an order for delivery
      tags:
      - orders
  /otp/email/generate:
    post:
      consumes:
      - application/json
      description: Generates and sends an OTP to the specified email address
      parameters:
      - description: OTP Generation Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GenerateEmailOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP generated successfully
          schema:
            $ref: '#/definitions/api.GenerateEmailOTPResponse'
        "400":
          description: Bad Request - Invalid input
        "429":
          description: Too Many Requests - OTP request rate limit exceeded
        "500":
          description: Internal Server Error
      summary: Generate a One-Time Password (OTP) for email
      tags:
      - authentication
  /otp/email/verify:
    post:
      consumes:
      - application/json
      description: Verifies the OTP sent to a user's email address and updates the
        user's email if valid
      parameters:
      - description: OTP Verification Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.VerifyEmailOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP verified successfully
        "400":
          description: Bad Request - Invalid input or OTP verification failed
        "401":
          description: Unauthorized - Invalid OTP code
        "500":
          description: Internal Server Error - Failed to update user information
      summary: Verify One-Time Password (OTP) via email
      tags:
      - authentication
  /otp/phone-number/generate:
    post:
      consumes:
      - application/json
      description: Generates and sends an OTP to the specified phone number. The OTP
        will be valid for 10 minutes.
      parameters:
      - description: OTP Generation Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GeneratePhoneOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP generated successfully
          schema:
            $ref: '#/definitions/api.GeneratePhoneOTPResponse'
        "400":
          description: Bad Request - Invalid phone number format
        "500":
          description: Internal Server Error - Failed to generate or send OTP
      summary: Generate a One-Time Password (OTP) for phone number
      tags:
      - authentication
  /otp/phone-number/verify:
    post:
      consumes:
      - application/json
      description: Verifies the OTP sent to a user's phone number and updates the
        user's phone number if valid
      parameters:
      - description: OTP Verification Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.VerifyPhoneOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP verified successfully
        "400":
          description: Bad Request - Invalid input or OTP verification failed
        "401":
          description: Unauthorized - Invalid OTP code
        "404":
          description: Not Found - User not found
        "500":
          description: Internal Server Error - Failed to update user information
      summary: Verify One-Time Password (OTP) via phone number
      tags:
      - authentication
  /seller/profile:
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific seller
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Seller profile details
          schema:
            $ref: '#/definitions/db.SellerInfo'
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Get seller profile
      tags:
      - seller profile
    patch:
      consumes:
      - application/json
      description: Update the seller's profile information
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateSellerProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated seller profile
          schema:
            $ref: '#/definitions/db.SellerProfile'
        "400":
          description: Invalid request body
        "404":
          description: Seller not found
        "500":
          description: Internal server error
      summary: Update seller profile
      tags:
      - seller profile
    post:
      consumes:
      - application/json
      description: Creates a new seller profile
      parameters:
      - description: Seller profile creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createSellerProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Seller profile created successfully
          schema:
            $ref: '#/definitions/db.SellerProfile'
        "400":
          description: Invalid request format
        "409":
          description: Seller profile already exists
        "500":
          description: Internal server error
      summary: Create a seller profile
      tags:
      - seller profile
  /sellers/:sellerID/orders:
    get:
      consumes:
      - application/json
      description: Get all sales orders that belong to the specified seller ID
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      - description: Filter by order status
        enum:
        - pending
        - packaging
        - delivering
        - delivered
        - completed
        - canceled
        - failed
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of sales orders
          schema:
            items:
              $ref: '#/definitions/db.SalesOrderInfo'
            type: array
      security:
      - accessToken: []
      summary: List all sales orders (excluding exchange orders) for a specific seller
      tags:
      - sellers
  /sellers/:sellerID/orders/:orderID:
    get:
      consumes:
      - application/json
      description: Get details of a specific sales order for the seller
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      - description: Order ID
        in: path
        name: orderID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Sales order details
          schema:
            $ref: '#/definitions/db.SalesOrderDetails'
      security:
      - accessToken: []
      summary: Get sales order details (excluding exchange orders)
      tags:
      - sellers
  /sellers/:sellerID/orders/:orderID/confirm:
    patch:
      consumes:
      - application/json
      description: Confirm an order for the specified seller. This endpoint checks
        the order's status before proceeding.
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      - description: Order ID
        in: path
        name: orderID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully confirmed order
          schema:
            $ref: '#/definitions/db.ConfirmOrderTxResult'
      security:
      - accessToken: []
      summary: Confirm an order
      tags:
      - sellers
  /sellers/:sellerID/subscriptions/active:
    get:
      description: Get the current active subscription for the specified seller
      parameters:
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved current active subscription
        "404":
          description: Subscription not found
        "500":
          description: Internal server error
      security:
      - accessToken: []
      summary: Get current active subscription
      tags:
      - sellers
  /sellers/{sellerID}/gundams/{gundamID}/publish:
    patch:
      consumes:
      - application/json
      description: Publish a gundam for sale for the specified seller. This endpoint
        checks the gundam's status before proceeding.
      parameters:
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: integer
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully published gundam
          schema:
            additionalProperties: true
            type: object
      security:
      - accessToken: []
      summary: Publish a gundam for sale
      tags:
      - sellers
  /sellers/{sellerID}/gundams/{gundamID}/unpublish:
    patch:
      consumes:
      - application/json
      description: Unpublish a gundam for the specified seller. This endpoint checks
        the gundam's status before proceeding.
      parameters:
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: integer
      - description: Seller ID
        in: path
        name: sellerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully unsold gundam with details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid gundam ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Seller does not own this gundam
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Seller not found<br/>Gundam not found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Gundam is not currently listed for sale
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - accessToken: []
      summary: Unpublish a gundam
      tags:
      - sellers
  /sellers/{sellerID}/orders/{orderID}/cancel:
    patch:
      consumes:
      - application/json
      description: Cancel a pending order by the seller
      parameters:
      - description: Seller ID
        example: s123e456-e789-45d0-9876-54321abcdef
        in: path
        name: sellerID
        required: true
        type: string
      - description: Order ID
        example: 123e4567-e89b-12d3-a456-426614174000
        in: path
        name: orderID
        required: true
        type: string
      - description: Cancellation reason
        in: body
        name: request
        schema:
          $ref: '#/definitions/api.cancelOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Order canceled successfully
          schema:
            $ref: '#/definitions/db.CancelOrderBySellerTxResult'
      security:
      - accessToken: []
      summary: Cancel order by seller
      tags:
      - sellers
  /tokens/verify:
    post:
      consumes:
      - application/json
      description: Verifies a JWT access token and returns the associated user
      parameters:
      - description: Token verification request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.verifyAccessTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User information
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Invalid request format
        "401":
          description: Invalid or expired token
      summary: Verify access token
      tags:
      - authentication
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user with email and password
      parameters:
      - description: User creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created user
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Invalid request body
        "409":
          description: Email already exists
        "422":
          description: Validation error
        "500":
          description: Internal server error
      summary: Create a new user
      tags:
      - authentication
  /users/:id/gundams:
    get:
      consumes:
      - application/json
      description: Get all gundams that belong to the specified user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam name to filter by
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of gundams
          schema:
            items:
              $ref: '#/definitions/db.GundamDetails'
            type: array
      security:
      - accessToken: []
      summary: List all gundams for a specific user
      tags:
      - users
    post:
      consumes:
      - multipart/form-data
      description: Create a new Gundam model with images and accessories
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam name
        in: formData
        name: name
        required: true
        type: string
      - description: Gundam grade ID
        in: formData
        name: grade_id
        required: true
        type: integer
      - description: Gundam series name
        in: formData
        name: series
        required: true
        type: string
      - description: Total number of parts
        in: formData
        name: parts_total
        required: true
        type: integer
      - description: Gundam material
        in: formData
        name: material
        required: true
        type: string
      - description: Gundam version
        in: formData
        name: version
        required: true
        type: string
      - description: Condition of the Gundam
        enum:
        - new
        - open box
        - used
        in: formData
        name: condition
        required: true
        type: string
      - description: Manufacturer name
        in: formData
        name: manufacturer
        required: true
        type: string
      - description: Gundam scale
        enum:
        - 1/144
        - 1/100
        - 1/60
        in: formData
        name: scale
        required: true
        type: string
      - description: Weight in grams
        in: formData
        name: weight
        required: true
        type: integer
      - description: Detailed description
        in: formData
        name: description
        required: true
        type: string
      - description: Price in VND
        in: formData
        name: price
        type: integer
      - description: Release year
        in: formData
        name: release_year
        type: integer
      - description: Primary image of the Gundam
        in: formData
        name: primary_image
        required: true
        type: file
      - description: Secondary images of the Gundam
        in: formData
        name: secondary_images
        required: true
        type: file
      - description: Additional details about condition
        in: formData
        name: condition_description
        type: string
      - description: Accessory as JSON object. Add multiple accessories by repeating
          this field with different values.
        in: formData
        name: accessory
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created Gundam
          schema:
            $ref: '#/definitions/db.GundamDetails'
        "400":
          description: Bad Request - Invalid input data
        "403":
          description: Forbidden - User is not authorized to create Gundam for this
            user
        "404":
          description: Not Found - User with specified ID does not exist
        "500":
          description: Internal Server Error - Failed to create Gundam
      security:
      - accessToken: []
      summary: Create a new Gundam model
      tags:
      - users
  /users/:id/gundams/:gundamID:
    delete:
      description: Hard delete a Gundam model by its ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted Gundam
      security:
      - accessToken: []
      summary: Hard delete Gundam
      tags:
      - gundams
    get:
      description: Retrieves detailed information about a specific Gundam model
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved Gundam details
          schema:
            $ref: '#/definitions/db.GundamDetails'
      security:
      - accessToken: []
      summary: Get Gundam details
      tags:
      - gundams
    patch:
      consumes:
      - application/json
      description: Update the basic information of a Gundam model
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      - description: Gundam name
        in: body
        name: name
        schema:
          type: string
      - description: Gundam grade ID
        in: body
        name: grade_id
        schema:
          type: integer
      - description: Gundam series name
        in: body
        name: series
        schema:
          type: string
      - description: Total number of parts
        in: body
        name: parts_total
        schema:
          type: integer
      - description: Gundam material
        in: body
        name: material
        schema:
          type: string
      - description: Gundam version
        in: body
        name: version
        schema:
          type: string
      - description: Condition of the Gundam
        in: body
        name: condition
        schema:
          enum:
          - new
          - open box
          - used
          type: string
      - description: Additional details about condition
        in: body
        name: condition_description
        schema:
          type: string
      - description: Manufacturer name
        in: body
        name: manufacturer
        schema:
          type: string
      - description: Weight in grams
        in: body
        name: weight
        schema:
          type: integer
      - description: Gundam scale
        in: body
        name: scale
        schema:
          enum:
          - 1/144
          - 1/100
          - 1/60
          - 1/48
          type: string
      - description: Detailed description
        in: body
        name: description
        schema:
          type: string
      - description: Price in VND
        in: body
        name: price
        schema:
          type: integer
      - description: Release year
        in: body
        name: release_year
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated Gundam
          schema:
            $ref: '#/definitions/db.GundamDetails'
      security:
      - accessToken: []
      summary: Update Gundam basis info
      tags:
      - gundams
  /users/:id/gundams/:gundamID/accessories:
    put:
      consumes:
      - application/json
      description: Update the accessories of a Gundam model
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      - description: Array of Gundam accessories
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/db.GundamAccessoryDTO'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated Gundam details
          schema:
            $ref: '#/definitions/db.GundamDetails'
      security:
      - accessToken: []
      summary: Update Gundam accessories
      tags:
      - gundams
  /users/:id/gundams/:gundamID/primary-image:
    patch:
      consumes:
      - multipart/form-data
      description: Update the primary image of a Gundam model
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Gundam ID
        in: path
        name: gundamID
        required: true
        type: string
      - description: New primary image of the Gundam
        in: formData
        name: primary_image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated Gundam details
          schema:
            $ref: '#/definitions/db.GundamDetails'
        "400":
          description: Bad Request - Invalid input data
        "403":
          description: Forbidden - User is not authorized to update Gundam for this
            user
        "404":
          description: Not Found - User or Gundam with specified ID does not exist
        "500":
          description: Internal Server Error - Failed to update Gundam primary image
      security:
      - accessToken: []
      summary: Update Gundam primary image
      tags:
      - gundams
  /users/:id/wallet:
    get:
      consumes:
      - application/json
      description: Get user wallet information details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User wallet information
          schema:
            $ref: '#/definitions/db.Wallet'
        "400":
          description: Bad request
        "404":
          description: User not found
        "500":
          description: Internal server error
      security:
      - accessToken: []
      summary: Get user wallet information details
      tags:
      - wallet
  /users/{id}:
    get:
      description: Get detailed information about a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            $ref: '#/definitions/db.User'
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Retrieve a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update specific user details by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Invalid request body
        "500":
          description: Internal server error
      summary: Update a user's information
      tags:
      - users
  /users/{id}/addresses:
    get:
      description: Get all addresses for a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user addresses
          schema:
            items:
              $ref: '#/definitions/db.UserAddress'
            type: array
        "500":
          description: Internal server error
      summary: Retrieve user addresses
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Add a new address for a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Address creation request
        in: body
        name: request
        schema:
          $ref: '#/definitions/api.createUserAddressRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Address created successfully
          schema:
            $ref: '#/definitions/db.UserAddress'
        "400":
          description: Invalid request body
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Create a new user address
      tags:
      - users
  /users/{id}/addresses/{address_id}:
    delete:
      description: Delete an address of a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Address ID
        in: path
        name: address_id
        required: true
        type: integer
      responses:
        "204":
          description: Address deleted successfully
        "400":
          description: Invalid request
        "404":
          description: Address not found
        "409":
          description: Cannot delete primary or pickup address
        "500":
          description: Internal server error
      summary: Delete user address
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an existing address information for a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Address ID
        in: path
        name: address_id
        required: true
        type: integer
      - description: Address information to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateUserAddressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Address updated successfully
          schema:
            $ref: '#/definitions/db.UserAddress'
      summary: Update user address
      tags:
      - users
  /users/{id}/addresses/pickup:
    get:
      description: Get the pickup address of a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user pickup address
          schema:
            $ref: '#/definitions/db.UserAddress'
        "404":
          description: Pickup address not found
        "500":
          description: Internal server error
      summary: Get user pickup address
      tags:
      - users
  /users/{id}/avatar:
    patch:
      consumes:
      - multipart/form-data
      description: Upload and update a user's profile avatar
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Avatar image file
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated avatar
          schema:
            $ref: '#/definitions/api.updateAvatarResponse'
        "400":
          description: Invalid request
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Update user avatar
      tags:
      - users
  /users/become-seller:
    post:
      consumes:
      - application/json
      description: Upgrade the user's role to seller and create the trial subscription
      produces:
      - application/json
      responses:
        "200":
          description: Successfully became seller
          schema:
            $ref: '#/definitions/db.User'
        "404":
          description: User not found
        "409":
          description: User is already a seller
        "500":
          description: Internal server error
      security:
      - accessToken: []
      summary: Become a seller
      tags:
      - users
  /users/by-phone:
    get:
      description: Get user details using a phone_number number as a query parameter
      parameters:
      - description: Phone Number
        in: query
        name: phone_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            $ref: '#/definitions/db.User'
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Retrieve a user by phone_number number
      tags:
      - users
  /users/me/exchange-offers:
    get:
      description: Get a list of all exchange offers created by the authenticated
        user, including details about the exchange posts, items, and negotiation notes.
      produces:
      - application/json
      responses:
        "200":
          description: List of user's exchange offers
          schema:
            items:
              $ref: '#/definitions/db.UserExchangeOfferDetails'
            type: array
      security:
      - accessToken: []
      summary: List user's exchange offers
      tags:
      - exchanges
    post:
      consumes:
      - application/json
      description: Create a 1-1 exchange offer with optional compensation.
      parameters:
      - description: Create exchange offer request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createExchangeOfferRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Create exchange offer response
          schema:
            $ref: '#/definitions/db.CreateExchangeOfferTxResult'
      security:
      - accessToken: []
      summary: Create an exchange offer
      tags:
      - exchanges
  /users/me/exchange-offers/{offerID}:
    delete:
      description: Delete an exchange offer created by the authenticated user.
      parameters:
      - description: Exchange Offer ID
        in: path
        name: offerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted offer response
          schema:
            $ref: '#/definitions/db.ExchangeOfferInfo'
      security:
      - accessToken: []
      summary: Delete an exchange offer
      tags:
      - exchanges
    get:
      description: Retrieves detailed information about a specific exchange offer
        created by the authenticated user.
      parameters:
      - description: Exchange Offer ID
        in: path
        name: offerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.UserExchangeOfferDetails'
        "400":
          description: Invalid offer ID
          schema: {}
        "403":
          description: Unauthorized access
          schema: {}
        "404":
          description: Offer not found
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      security:
      - accessToken: []
      summary: Get user's exchange offer details
      tags:
      - exchanges
    patch:
      consumes:
      - application/json
      description: As an offerer, update exchange offer details. Only allowed when
        a negotiation is requested by the post owner.
      parameters:
      - description: Exchange Offer OfferID
        in: path
        name: offerID
        required: true
        type: string
      - description: Update offer request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateExchangeOfferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated offer response
          schema:
            $ref: '#/definitions/db.UpdateExchangeOfferTxResult'
      security:
      - accessToken: []
      summary: Update an exchange offer
      tags:
      - exchanges
  /users/me/exchange-posts:
    get:
      description: List all exchange posts created by the current authenticated user.
      parameters:
      - description: Filter by status (open, closed)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of user's exchange posts
          schema:
            items:
              $ref: '#/definitions/db.UserExchangePostDetails'
            type: array
      security:
      - accessToken: []
      summary: List user's exchange posts
      tags:
      - exchanges
    post:
      consumes:
      - multipart/form-data
      description: Create a new exchange post.
      parameters:
      - description: Create exchange post request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createExchangePostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Create exchange post response
          schema:
            $ref: '#/definitions/db.CreateExchangePostTxResult'
      security:
      - accessToken: []
      summary: Create a new exchange post
      tags:
      - exchanges
  /users/me/exchange-posts/{id}:
    delete:
      description: Deletes an exchange post and resets the status of associated gundams.
        Only the post owner can delete it.
      parameters:
      - description: Exchange Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Delete exchange post response
          schema:
            $ref: '#/definitions/db.DeleteExchangePostTxResult'
      security:
      - accessToken: []
      summary: Delete an exchange post
      tags:
      - exchanges
  /users/me/exchange-posts/{postID}:
    get:
      description: Get detailed information about a specific exchange post owned by
        the authenticated user, including items and offers.
      parameters:
      - description: Exchange Post ID
        in: path
        name: postID
        required: true
        type: string
      - description: Filter by status (open, closed)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User exchange post details
          schema:
            $ref: '#/definitions/db.UserExchangePostDetails'
        "400":
          description: Invalid post ID or status
          schema: {}
        "404":
          description: Post not found
          schema: {}
      security:
      - accessToken: []
      summary: Get user's exchange post details
      tags:
      - exchanges
  /users/me/exchange-posts/{postID}/offers/{offerID}/accept:
    patch:
      description: As a post owner, accept an exchange offer. This will create an
        exchange transaction and related orders.
      parameters:
      - description: Exchange Post ID
        in: path
        name: postID
        required: true
        type: string
      - description: Exchange Offer ID
        in: path
        name: offerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Accepted offer response
          schema:
            $ref: '#/definitions/db.AcceptExchangeOfferTxResult'
      security:
      - accessToken: []
      summary: Accept an exchange offer
      tags:
      - exchanges
  /users/me/exchange-posts/{postID}/offers/{offerID}/negotiate:
    patch:
      consumes:
      - application/json
      description: As a post owner, request negotiation with an offerer.
      parameters:
      - description: Exchange Post ID
        in: path
        name: postID
        required: true
        type: string
      - description: Exchange Offer ID
        in: path
        name: offerID
        required: true
        type: string
      - description: Negotiation request
        in: body
        name: request
        schema:
          $ref: '#/definitions/api.requestNegotiationForOfferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Negotiation request response
          schema:
            $ref: '#/definitions/db.RequestNegotiationForOfferTxResult'
      security:
      - accessToken: []
      summary: Request negotiation for an exchange offer
      tags:
      - exchanges
  /wallet/zalopay/create:
    post:
      consumes:
      - application/json
      description: Create a ZaloPay order
      parameters:
      - description: Create ZaloPay order request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.createZalopayOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Create ZaloPay order response
          schema:
            $ref: '#/definitions/zalopay.CreateOrderZalopayResponse'
        "400":
          description: Bad request
        "500":
          description: Internal server error
      security:
      - accessToken: []
      summary: Create a ZaloPay order
      tags:
      - wallet
schemes:
- http
- https
securityDefinitions:
  accessToken:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
