// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: exchange_offer_items.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const listExchangeOfferItems = `-- name: ListExchangeOfferItems :many
SELECT id, offer_id, gundam_id, created_at FROM exchange_offer_items
WHERE offer_id = $1
ORDER BY created_at DESC
`

func (q *Queries) ListExchangeOfferItems(ctx context.Context, offerID uuid.UUID) ([]ExchangeOfferItem, error) {
	rows, err := q.db.Query(ctx, listExchangeOfferItems, offerID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []ExchangeOfferItem{}
	for rows.Next() {
		var i ExchangeOfferItem
		if err := rows.Scan(
			&i.ID,
			&i.OfferID,
			&i.GundamID,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
