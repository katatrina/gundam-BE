// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: wallet_entries.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createWalletEntry = `-- name: CreateWalletEntry :one
INSERT INTO wallet_entries (wallet_id,
                            reference_id,
                            reference_type,
                            entry_type,
                            amount,
                            status)
VALUES ($1, $2, $3, $4, $5, $6) RETURNING id, wallet_id, reference_id, reference_type, entry_type, amount, status, created_at, updated_at, completed_at
`

type CreateWalletEntryParams struct {
	WalletID      int64               `json:"wallet_id"`
	ReferenceID   pgtype.Text         `json:"reference_id"`
	ReferenceType WalletReferenceType `json:"reference_type"`
	EntryType     WalletEntryType     `json:"entry_type"`
	Amount        int64               `json:"amount"`
	Status        WalletEntryStatus   `json:"status"`
}

func (q *Queries) CreateWalletEntry(ctx context.Context, arg CreateWalletEntryParams) (WalletEntry, error) {
	row := q.db.QueryRow(ctx, createWalletEntry,
		arg.WalletID,
		arg.ReferenceID,
		arg.ReferenceType,
		arg.EntryType,
		arg.Amount,
		arg.Status,
	)
	var i WalletEntry
	err := row.Scan(
		&i.ID,
		&i.WalletID,
		&i.ReferenceID,
		&i.ReferenceType,
		&i.EntryType,
		&i.Amount,
		&i.Status,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.CompletedAt,
	)
	return i, err
}
