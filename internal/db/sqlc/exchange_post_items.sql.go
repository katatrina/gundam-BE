// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: exchange_post_items.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createExchangePostItems = `-- name: CreateExchangePostItems :many
INSERT INTO exchange_post_items (id,
                                 post_id,
                                 gundam_id)
SELECT UNNEST($1::uuid[]),
       $2::uuid, UNNEST($3::bigint[]) RETURNING id, post_id, gundam_id, created_at
`

type CreateExchangePostItemsParams struct {
	ItemIds   []uuid.UUID `json:"item_ids"`
	PostID    uuid.UUID   `json:"post_id"`
	GundamIds []int64     `json:"gundam_ids"`
}

func (q *Queries) CreateExchangePostItems(ctx context.Context, arg CreateExchangePostItemsParams) ([]ExchangePostItem, error) {
	rows, err := q.db.Query(ctx, createExchangePostItems, arg.ItemIds, arg.PostID, arg.GundamIds)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []ExchangePostItem{}
	for rows.Next() {
		var i ExchangePostItem
		if err := rows.Scan(
			&i.ID,
			&i.PostID,
			&i.GundamID,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
