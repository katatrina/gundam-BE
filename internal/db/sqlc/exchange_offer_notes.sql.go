// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: exchange_offer_notes.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const listExchangeOfferNotes = `-- name: ListExchangeOfferNotes :many
SELECT id, offer_id, user_id, content, created_at
FROM exchange_offer_notes
WHERE offer_id = $1
ORDER BY created_at DESC
`

func (q *Queries) ListExchangeOfferNotes(ctx context.Context, offerID uuid.UUID) ([]ExchangeOfferNote, error) {
	rows, err := q.db.Query(ctx, listExchangeOfferNotes, offerID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []ExchangeOfferNote{}
	for rows.Next() {
		var i ExchangeOfferNote
		if err := rows.Scan(
			&i.ID,
			&i.OfferID,
			&i.UserID,
			&i.Content,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
